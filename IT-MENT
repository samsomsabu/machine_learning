{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/samsomsabu/machine_learning/blob/main/machine_learning_project_prototype1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "dc7cd7b3-32e0-4284-b669-87d4fb6dbaf8",
        "_uuid": "dfeb8a6c8cc31996e69537a9a25102c42ccf3e6d",
        "id": "PtpNkxKTaigB"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Library_and_data_loading'></a>\n",
        "## **1. Library and data loading** ##"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "507667c6-d01e-44e4-b8d7-a2d61d3eb02a",
        "_uuid": "d59a9a91a5da35354233aaf9fc1f0dd66686349b",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2dLFTsuRaigC",
        "outputId": "8ea5abab-b004-4a4b-9642-8d809bf1e6f9"
      },
      "cell_type": "code",
      "source": [
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "from scipy import stats\n",
        "from scipy.stats import randint\n",
        "\n",
        "# prep\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn import preprocessing\n",
        "from sklearn.datasets import make_classification\n",
        "from sklearn.preprocessing import binarize, LabelEncoder, MinMaxScaler\n",
        "\n",
        "# models\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\n",
        "\n",
        "# Validation libraries\n",
        "from sklearn import metrics\n",
        "from sklearn.metrics import accuracy_score, mean_squared_error, precision_recall_curve\n",
        "from sklearn.model_selection import cross_val_score\n",
        "\n",
        "#Neural Network\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "\n",
        "\n",
        "#Bagging\n",
        "from sklearn.ensemble import BaggingClassifier, AdaBoostClassifier\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "#Naive bayes\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "\n",
        "#Stacking\n",
        "from mlxtend.classifier import StackingClassifier\n",
        "\n",
        "# Input data files are available in the \"../input/\" directory.\n",
        "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n",
        "\n",
        "#from subprocess import check_output\n",
        "#print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n",
        "\n",
        "# Any results you write to the current directory are saved as output.\n",
        "\n",
        "#reading in CSV's from a file path\n",
        "train_df = pd.read_csv('/content/survey.csv')\n",
        "\n",
        "\n",
        "#Pandas: whats the data row count?\n",
        "print(train_df.shape)\n",
        "\n",
        "#Pandas: whats the distribution of the data?\n",
        "print(train_df.describe())\n",
        "\n",
        "#Pandas: What types of data do i have?\n",
        "print(train_df.info())\n"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1259, 27)\n",
            "                Age\n",
            "count  1.259000e+03\n",
            "mean   7.942815e+07\n",
            "std    2.818299e+09\n",
            "min   -1.726000e+03\n",
            "25%    2.700000e+01\n",
            "50%    3.100000e+01\n",
            "75%    3.600000e+01\n",
            "max    1.000000e+11\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1259 entries, 0 to 1258\n",
            "Data columns (total 27 columns):\n",
            " #   Column                     Non-Null Count  Dtype \n",
            "---  ------                     --------------  ----- \n",
            " 0   Timestamp                  1259 non-null   object\n",
            " 1   Age                        1259 non-null   int64 \n",
            " 2   Gender                     1259 non-null   object\n",
            " 3   Country                    1259 non-null   object\n",
            " 4   state                      744 non-null    object\n",
            " 5   self_employed              1241 non-null   object\n",
            " 6   family_history             1259 non-null   object\n",
            " 7   treatment                  1259 non-null   object\n",
            " 8   work_interfere             995 non-null    object\n",
            " 9   no_employees               1259 non-null   object\n",
            " 10  remote_work                1259 non-null   object\n",
            " 11  tech_company               1259 non-null   object\n",
            " 12  benefits                   1259 non-null   object\n",
            " 13  care_options               1259 non-null   object\n",
            " 14  wellness_program           1259 non-null   object\n",
            " 15  seek_help                  1259 non-null   object\n",
            " 16  anonymity                  1259 non-null   object\n",
            " 17  leave                      1259 non-null   object\n",
            " 18  mental_health_consequence  1259 non-null   object\n",
            " 19  phys_health_consequence    1259 non-null   object\n",
            " 20  coworkers                  1259 non-null   object\n",
            " 21  supervisor                 1259 non-null   object\n",
            " 22  mental_health_interview    1259 non-null   object\n",
            " 23  phys_health_interview      1259 non-null   object\n",
            " 24  mental_vs_physical         1259 non-null   object\n",
            " 25  obs_consequence            1259 non-null   object\n",
            " 26  comments                   164 non-null    object\n",
            "dtypes: int64(1), object(26)\n",
            "memory usage: 265.7+ KB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "9a8c2272-ba6c-477a-9710-b82d57a1804f",
        "_uuid": "e4eef2cb6628af4e719fdbd434ccbacc1846e487",
        "id": "xL4OLXdJaigC"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Data_cleaning'></a>\n",
        "## **2. Data cleaning** ##"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "a8e060e1-18fa-4214-a6fb-f924f74af108",
        "_kg_hide-input": true,
        "_kg_hide-output": true,
        "_uuid": "6088e9b05d062fbed2c2272924e9d8aa0e23e5b7",
        "scrolled": false,
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gdl6ROKzaigD",
        "outputId": "c0e2c20a-bea4-4a59-a87b-392300f23cee"
      },
      "cell_type": "code",
      "source": [
        "#missing data\n",
        "total = train_df.isnull().sum().sort_values(ascending=False)\n",
        "percent = (train_df.isnull().sum()/train_df.isnull().count()).sort_values(ascending=False)\n",
        "missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n",
        "missing_data.head(20)\n",
        "print(missing_data)\n"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                           Total   Percent\n",
            "comments                    1095  0.869738\n",
            "state                        515  0.409055\n",
            "work_interfere               264  0.209690\n",
            "self_employed                 18  0.014297\n",
            "seek_help                      0  0.000000\n",
            "obs_consequence                0  0.000000\n",
            "mental_vs_physical             0  0.000000\n",
            "phys_health_interview          0  0.000000\n",
            "mental_health_interview        0  0.000000\n",
            "supervisor                     0  0.000000\n",
            "coworkers                      0  0.000000\n",
            "phys_health_consequence        0  0.000000\n",
            "mental_health_consequence      0  0.000000\n",
            "leave                          0  0.000000\n",
            "anonymity                      0  0.000000\n",
            "Timestamp                      0  0.000000\n",
            "wellness_program               0  0.000000\n",
            "Age                            0  0.000000\n",
            "benefits                       0  0.000000\n",
            "tech_company                   0  0.000000\n",
            "remote_work                    0  0.000000\n",
            "no_employees                   0  0.000000\n",
            "treatment                      0  0.000000\n",
            "family_history                 0  0.000000\n",
            "Country                        0  0.000000\n",
            "Gender                         0  0.000000\n",
            "care_options                   0  0.000000\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "d21825da-92d6-48e2-9ab9-c63fbbbbd2b7",
        "_uuid": "50bdd9973655b16c61711d519645df6afb2ca214",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "Ii47rI-EaigD",
        "outputId": "992f53cc-c6e8-4ac1-9a03-98c688d352e1"
      },
      "cell_type": "code",
      "source": [
        "\n",
        "#dealing with missing data\n",
        "#Let’s get rid of the variables \"Timestamp\",“comments”, “state” just to make our lives easier.\n",
        "train_df = train_df.drop(['comments'], axis= 1)\n",
        "train_df = train_df.drop(['state'], axis= 1)\n",
        "train_df = train_df.drop(['Timestamp'], axis= 1)\n",
        "\n",
        "train_df.isnull().sum().max() #just checking that there's no missing data missing...\n",
        "train_df.head(5)"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age  Gender         Country self_employed family_history treatment  \\\n",
              "0   37  Female   United States           NaN             No       Yes   \n",
              "1   44       M   United States           NaN             No        No   \n",
              "2   32    Male          Canada           NaN             No        No   \n",
              "3   31    Male  United Kingdom           NaN            Yes       Yes   \n",
              "4   31    Male   United States           NaN             No        No   \n",
              "\n",
              "  work_interfere    no_employees remote_work tech_company  ...   anonymity  \\\n",
              "0          Often            6-25          No          Yes  ...         Yes   \n",
              "1         Rarely  More than 1000          No           No  ...  Don't know   \n",
              "2         Rarely            6-25          No          Yes  ...  Don't know   \n",
              "3          Often          26-100          No          Yes  ...          No   \n",
              "4          Never         100-500         Yes          Yes  ...  Don't know   \n",
              "\n",
              "                leave mental_health_consequence phys_health_consequence  \\\n",
              "0       Somewhat easy                        No                      No   \n",
              "1          Don't know                     Maybe                      No   \n",
              "2  Somewhat difficult                        No                      No   \n",
              "3  Somewhat difficult                       Yes                     Yes   \n",
              "4          Don't know                        No                      No   \n",
              "\n",
              "      coworkers supervisor mental_health_interview phys_health_interview  \\\n",
              "0  Some of them        Yes                      No                 Maybe   \n",
              "1            No         No                      No                    No   \n",
              "2           Yes        Yes                     Yes                   Yes   \n",
              "3  Some of them         No                   Maybe                 Maybe   \n",
              "4  Some of them        Yes                     Yes                   Yes   \n",
              "\n",
              "  mental_vs_physical obs_consequence  \n",
              "0                Yes              No  \n",
              "1         Don't know              No  \n",
              "2                 No              No  \n",
              "3                 No             Yes  \n",
              "4         Don't know              No  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2cd2d595-eb75-482c-99a2-171acf02f23a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Country</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>family_history</th>\n",
              "      <th>treatment</th>\n",
              "      <th>work_interfere</th>\n",
              "      <th>no_employees</th>\n",
              "      <th>remote_work</th>\n",
              "      <th>tech_company</th>\n",
              "      <th>...</th>\n",
              "      <th>anonymity</th>\n",
              "      <th>leave</th>\n",
              "      <th>mental_health_consequence</th>\n",
              "      <th>phys_health_consequence</th>\n",
              "      <th>coworkers</th>\n",
              "      <th>supervisor</th>\n",
              "      <th>mental_health_interview</th>\n",
              "      <th>phys_health_interview</th>\n",
              "      <th>mental_vs_physical</th>\n",
              "      <th>obs_consequence</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>37</td>\n",
              "      <td>Female</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Often</td>\n",
              "      <td>6-25</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Somewhat easy</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>44</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Rarely</td>\n",
              "      <td>More than 1000</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>32</td>\n",
              "      <td>Male</td>\n",
              "      <td>Canada</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Rarely</td>\n",
              "      <td>6-25</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31</td>\n",
              "      <td>Male</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Often</td>\n",
              "      <td>26-100</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>No</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>No</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31</td>\n",
              "      <td>Male</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Never</td>\n",
              "      <td>100-500</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cd2d595-eb75-482c-99a2-171acf02f23a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2cd2d595-eb75-482c-99a2-171acf02f23a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2cd2d595-eb75-482c-99a2-171acf02f23a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9bfb1e1c-67eb-4e93-b202-a067066edf6c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9bfb1e1c-67eb-4e93-b202-a067066edf6c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9bfb1e1c-67eb-4e93-b202-a067066edf6c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "871f195e-d25d-426a-84f5-997b017b892c",
        "_uuid": "7a54d86c30dab2e270e7374455178f8abcc15a7c",
        "id": "O_jXYXbyaigD"
      },
      "cell_type": "markdown",
      "source": [
        "**Cleaning NaN**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "2bf70e26-afd9-4766-95ae-68d8ff9b21db",
        "_uuid": "08b863f7d666b7e68cef056ba2a0ae033cbdeb9d",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 342
        },
        "id": "Bsaey489aigD",
        "outputId": "2aac4d25-5fd0-4903-a958-d6a5272d49d4"
      },
      "cell_type": "code",
      "source": [
        "# Assign default values for each data type\n",
        "defaultInt = 0\n",
        "defaultString = 'NaN'\n",
        "defaultFloat = 0.0\n",
        "\n",
        "# Create lists by data tpe\n",
        "intFeatures = ['Age']\n",
        "stringFeatures = ['Gender', 'Country', 'self_employed', 'family_history', 'treatment', 'work_interfere',\n",
        "                 'no_employees', 'remote_work', 'tech_company', 'anonymity', 'leave', 'mental_health_consequence',\n",
        "                 'phys_health_consequence', 'coworkers', 'supervisor', 'mental_health_interview', 'phys_health_interview',\n",
        "                 'mental_vs_physical', 'obs_consequence', 'benefits', 'care_options', 'wellness_program',\n",
        "                 'seek_help']\n",
        "floatFeatures = []\n",
        "\n",
        "# Clean the NaN's\n",
        "for feature in train_df:\n",
        "    if feature in intFeatures:\n",
        "        train_df[feature] = train_df[feature].fillna(defaultInt)\n",
        "    elif feature in stringFeatures:\n",
        "        train_df[feature] = train_df[feature].fillna(defaultString)\n",
        "    elif feature in floatFeatures:\n",
        "        train_df[feature] = train_df[feature].fillna(defaultFloat)\n",
        "    else:\n",
        "        print('Error: Feature %s not recognized.' % feature)\n",
        "train_df.head(5)"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age  Gender         Country self_employed family_history treatment  \\\n",
              "0   37  Female   United States           NaN             No       Yes   \n",
              "1   44       M   United States           NaN             No        No   \n",
              "2   32    Male          Canada           NaN             No        No   \n",
              "3   31    Male  United Kingdom           NaN            Yes       Yes   \n",
              "4   31    Male   United States           NaN             No        No   \n",
              "\n",
              "  work_interfere    no_employees remote_work tech_company  ...   anonymity  \\\n",
              "0          Often            6-25          No          Yes  ...         Yes   \n",
              "1         Rarely  More than 1000          No           No  ...  Don't know   \n",
              "2         Rarely            6-25          No          Yes  ...  Don't know   \n",
              "3          Often          26-100          No          Yes  ...          No   \n",
              "4          Never         100-500         Yes          Yes  ...  Don't know   \n",
              "\n",
              "                leave mental_health_consequence phys_health_consequence  \\\n",
              "0       Somewhat easy                        No                      No   \n",
              "1          Don't know                     Maybe                      No   \n",
              "2  Somewhat difficult                        No                      No   \n",
              "3  Somewhat difficult                       Yes                     Yes   \n",
              "4          Don't know                        No                      No   \n",
              "\n",
              "      coworkers supervisor mental_health_interview phys_health_interview  \\\n",
              "0  Some of them        Yes                      No                 Maybe   \n",
              "1            No         No                      No                    No   \n",
              "2           Yes        Yes                     Yes                   Yes   \n",
              "3  Some of them         No                   Maybe                 Maybe   \n",
              "4  Some of them        Yes                     Yes                   Yes   \n",
              "\n",
              "  mental_vs_physical obs_consequence  \n",
              "0                Yes              No  \n",
              "1         Don't know              No  \n",
              "2                 No              No  \n",
              "3                 No             Yes  \n",
              "4         Don't know              No  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bf67209a-2dba-4e0a-ae01-4bfe5b838090\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Country</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>family_history</th>\n",
              "      <th>treatment</th>\n",
              "      <th>work_interfere</th>\n",
              "      <th>no_employees</th>\n",
              "      <th>remote_work</th>\n",
              "      <th>tech_company</th>\n",
              "      <th>...</th>\n",
              "      <th>anonymity</th>\n",
              "      <th>leave</th>\n",
              "      <th>mental_health_consequence</th>\n",
              "      <th>phys_health_consequence</th>\n",
              "      <th>coworkers</th>\n",
              "      <th>supervisor</th>\n",
              "      <th>mental_health_interview</th>\n",
              "      <th>phys_health_interview</th>\n",
              "      <th>mental_vs_physical</th>\n",
              "      <th>obs_consequence</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>37</td>\n",
              "      <td>Female</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Often</td>\n",
              "      <td>6-25</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Somewhat easy</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>44</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Rarely</td>\n",
              "      <td>More than 1000</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>32</td>\n",
              "      <td>Male</td>\n",
              "      <td>Canada</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Rarely</td>\n",
              "      <td>6-25</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31</td>\n",
              "      <td>Male</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Often</td>\n",
              "      <td>26-100</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>No</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>No</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31</td>\n",
              "      <td>Male</td>\n",
              "      <td>United States</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Never</td>\n",
              "      <td>100-500</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>...</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Some of them</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Don't know</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf67209a-2dba-4e0a-ae01-4bfe5b838090')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bf67209a-2dba-4e0a-ae01-4bfe5b838090 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bf67209a-2dba-4e0a-ae01-4bfe5b838090');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a3833284-635e-4a44-bbfe-f5c9d22c5d3d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3833284-635e-4a44-bbfe-f5c9d22c5d3d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a3833284-635e-4a44-bbfe-f5c9d22c5d3d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "4ec04bf5-c88f-4839-a79b-2d3ad6962599",
        "_uuid": "4507b7c43c9663f90a9cf915dd73850e4e0f17ab",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5nuB_lihaigD",
        "outputId": "a463508e-4426-4a6c-e3a2-cdb12af1906b"
      },
      "cell_type": "code",
      "source": [
        "#clean 'Gender'\n",
        "#Slower case all columm's elements\n",
        "gender = train_df['Gender'].str.lower()\n",
        "#print(gender)\n",
        "\n",
        "#Select unique elements\n",
        "gender = train_df['Gender'].unique()\n",
        "\n",
        "#Made gender groups\n",
        "male_str = [\"male\", \"m\", \"male-ish\", \"maile\", \"mal\", \"male (cis)\", \"make\", \"male \", \"man\",\"msle\", \"mail\", \"malr\",\"cis man\", \"Cis Male\", \"cis male\"]\n",
        "trans_str = [\"trans-female\", \"something kinda male?\", \"queer/she/they\", \"non-binary\",\"nah\", \"all\", \"enby\", \"fluid\", \"genderqueer\", \"androgyne\", \"agender\", \"male leaning androgynous\", \"guy (-ish) ^_^\", \"trans woman\", \"neuter\", \"female (trans)\", \"queer\", \"ostensibly male, unsure what that really means\"]\n",
        "female_str = [\"cis female\", \"f\", \"female\", \"woman\",  \"femake\", \"female \",\"cis-female/femme\", \"female (cis)\", \"femail\"]\n",
        "\n",
        "for (row, col) in train_df.iterrows():\n",
        "\n",
        "    if str.lower(col.Gender) in male_str:\n",
        "        train_df['Gender'].replace(to_replace=col.Gender, value='male', inplace=True)\n",
        "\n",
        "    if str.lower(col.Gender) in female_str:\n",
        "        train_df['Gender'].replace(to_replace=col.Gender, value='female', inplace=True)\n",
        "\n",
        "    if str.lower(col.Gender) in trans_str:\n",
        "        train_df['Gender'].replace(to_replace=col.Gender, value='trans', inplace=True)\n",
        "\n",
        "#Get rid of bullshit\n",
        "stk_list = ['A little about you', 'p']\n",
        "train_df = train_df[~train_df['Gender'].isin(stk_list)]\n",
        "\n",
        "\n",
        "train_df = train_df[~train_df['Gender'].isin(trans_str)]\n",
        "train_df = train_df[train_df['Gender'] != 'trans']\n",
        "\n",
        "# Display the unique 'Gender' values after dropping\n",
        "print(train_df['Gender'].unique())\n"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['female' 'male']\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "0e211fa8-a69e-42c1-adda-375d82916db4",
        "_uuid": "818c6a88caf07379d5012f15919d6eb46ae6d98c",
        "collapsed": true,
        "trusted": true,
        "id": "1wxgsUuaaigE"
      },
      "cell_type": "code",
      "source": [
        "#complete missing age with mean\n",
        "train_df['Age'].fillna(train_df['Age'].median(), inplace = True)\n",
        "\n",
        "# Fill with media() values < 18 and > 120\n",
        "s = pd.Series(train_df['Age'])\n",
        "s[s<18] = train_df['Age'].median()\n",
        "train_df['Age'] = s\n",
        "s = pd.Series(train_df['Age'])\n",
        "s[s>120] = train_df['Age'].median()\n",
        "train_df['Age'] = s\n",
        "\n",
        "#Ranges of Age\n",
        "train_df['age_range'] = pd.cut(train_df['Age'], [0,20,30,65,100], labels=[\"0-20\", \"21-30\", \"31-65\", \"66-100\"], include_lowest=True)\n",
        "\n"
      ],
      "execution_count": 76,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "ffa02f53-30cd-4f7e-bcd9-f74b3c0826c4",
        "_uuid": "55b6621c02ca8d8603d815da74b15ad621b46629",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9soCw5p0aigE",
        "outputId": "c521b184-db4a-4b76-8558-09f1942877ae"
      },
      "cell_type": "code",
      "source": [
        "#There are only 0.014% of self employed so let's change NaN to NOT self_employed\n",
        "#Replace \"NaN\" string from defaultString\n",
        "train_df['self_employed'] = train_df['self_employed'].replace([defaultString], 'No')\n",
        "print(train_df['self_employed'].unique())"
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['No' 'Yes']\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "d910581d-4b92-4919-ab5a-85b018158745",
        "_uuid": "b934d97a22a46c36e107d2e0fdeb9f0ee74dc532",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IsMbmLLqaigE",
        "outputId": "b79843bc-650d-4e4e-bae1-8e7db7825cf2"
      },
      "cell_type": "code",
      "source": [
        "#There are only 0.20% of self work_interfere so let's change NaN to \"Don't know\n",
        "#Replace \"NaN\" string from defaultString\n",
        "\n",
        "train_df['work_interfere'] = train_df['work_interfere'].replace([defaultString], 'Don\\'t know' )\n",
        "print(train_df['work_interfere'].unique())"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Often' 'Rarely' 'Never' 'Sometimes' \"Don't know\"]\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b77019bf-b900-4c2b-9676-792860d89825",
        "_uuid": "01bdb3e74278bd61fdbdda9b1f9a3085c873999b",
        "id": "EfhQtjfSaigE"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Encoding_data'></a>\n",
        "## **3. Encoding data**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "05a6455e-187d-4db2-bb71-4fbf2ba6d967",
        "_uuid": "af23578fce1520cbe5fd970b13c7ddd71f442018",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 689
        },
        "id": "MQ05IT_NaigF",
        "outputId": "c40175b1-2cc2-40d4-af8b-905684040483"
      },
      "cell_type": "code",
      "source": [
        "#Encoding data\n",
        "labelDict = {}\n",
        "for feature in train_df:\n",
        "    le = preprocessing.LabelEncoder()\n",
        "    le.fit(train_df[feature])\n",
        "    le_name_mapping = dict(zip(le.classes_, le.transform(le.classes_)))\n",
        "    train_df[feature] = le.transform(train_df[feature])\n",
        "    # Get labels\n",
        "    labelKey = 'label_' + feature\n",
        "    labelValue = [*le_name_mapping]\n",
        "    labelDict[labelKey] =labelValue\n",
        "\n",
        "for key, value in labelDict.items():\n",
        "    print(key, value)\n",
        "\n",
        "#Get rid of 'Country'\n",
        "train_df = train_df.drop(['Country'], axis= 1)\n",
        "train_df.head()\n",
        "\n"
      ],
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "label_Age [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 72]\n",
            "label_Gender ['female', 'male']\n",
            "label_Country ['Australia', 'Austria', 'Belgium', 'Bosnia and Herzegovina', 'Brazil', 'Bulgaria', 'Canada', 'China', 'Colombia', 'Costa Rica', 'Croatia', 'Czech Republic', 'Denmark', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'India', 'Ireland', 'Israel', 'Italy', 'Japan', 'Latvia', 'Mexico', 'Moldova', 'Netherlands', 'New Zealand', 'Nigeria', 'Norway', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Singapore', 'Slovenia', 'South Africa', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'United Kingdom', 'United States', 'Uruguay']\n",
            "label_self_employed ['No', 'Yes']\n",
            "label_family_history ['No', 'Yes']\n",
            "label_treatment ['No', 'Yes']\n",
            "label_work_interfere [\"Don't know\", 'Never', 'Often', 'Rarely', 'Sometimes']\n",
            "label_no_employees ['1-5', '100-500', '26-100', '500-1000', '6-25', 'More than 1000']\n",
            "label_remote_work ['No', 'Yes']\n",
            "label_tech_company ['No', 'Yes']\n",
            "label_benefits [\"Don't know\", 'No', 'Yes']\n",
            "label_care_options ['No', 'Not sure', 'Yes']\n",
            "label_wellness_program [\"Don't know\", 'No', 'Yes']\n",
            "label_seek_help [\"Don't know\", 'No', 'Yes']\n",
            "label_anonymity [\"Don't know\", 'No', 'Yes']\n",
            "label_leave [\"Don't know\", 'Somewhat difficult', 'Somewhat easy', 'Very difficult', 'Very easy']\n",
            "label_mental_health_consequence ['Maybe', 'No', 'Yes']\n",
            "label_phys_health_consequence ['Maybe', 'No', 'Yes']\n",
            "label_coworkers ['No', 'Some of them', 'Yes']\n",
            "label_supervisor ['No', 'Some of them', 'Yes']\n",
            "label_mental_health_interview ['Maybe', 'No', 'Yes']\n",
            "label_phys_health_interview ['Maybe', 'No', 'Yes']\n",
            "label_mental_vs_physical [\"Don't know\", 'No', 'Yes']\n",
            "label_obs_consequence ['No', 'Yes']\n",
            "label_age_range ['0-20', '21-30', '31-65', '66-100']\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age  Gender  self_employed  family_history  treatment  work_interfere  \\\n",
              "0   19       0              0               0          1               2   \n",
              "1   26       1              0               0          0               3   \n",
              "2   14       1              0               0          0               3   \n",
              "3   13       1              0               1          1               2   \n",
              "4   13       1              0               0          0               1   \n",
              "\n",
              "   no_employees  remote_work  tech_company  benefits  ...  leave  \\\n",
              "0             4            0             1         2  ...      2   \n",
              "1             5            0             0         0  ...      0   \n",
              "2             4            0             1         1  ...      1   \n",
              "3             2            0             1         1  ...      1   \n",
              "4             1            1             1         2  ...      0   \n",
              "\n",
              "   mental_health_consequence  phys_health_consequence  coworkers  supervisor  \\\n",
              "0                          1                        1          1           2   \n",
              "1                          0                        1          0           0   \n",
              "2                          1                        1          2           2   \n",
              "3                          2                        2          1           0   \n",
              "4                          1                        1          1           2   \n",
              "\n",
              "   mental_health_interview  phys_health_interview  mental_vs_physical  \\\n",
              "0                        1                      0                   2   \n",
              "1                        1                      1                   0   \n",
              "2                        2                      2                   1   \n",
              "3                        0                      0                   1   \n",
              "4                        2                      2                   0   \n",
              "\n",
              "   obs_consequence  age_range  \n",
              "0                0          2  \n",
              "1                0          2  \n",
              "2                0          2  \n",
              "3                1          2  \n",
              "4                0          2  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f622c255-c7ee-41c4-bac5-d7f61a16f79d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>family_history</th>\n",
              "      <th>treatment</th>\n",
              "      <th>work_interfere</th>\n",
              "      <th>no_employees</th>\n",
              "      <th>remote_work</th>\n",
              "      <th>tech_company</th>\n",
              "      <th>benefits</th>\n",
              "      <th>...</th>\n",
              "      <th>leave</th>\n",
              "      <th>mental_health_consequence</th>\n",
              "      <th>phys_health_consequence</th>\n",
              "      <th>coworkers</th>\n",
              "      <th>supervisor</th>\n",
              "      <th>mental_health_interview</th>\n",
              "      <th>phys_health_interview</th>\n",
              "      <th>mental_vs_physical</th>\n",
              "      <th>obs_consequence</th>\n",
              "      <th>age_range</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f622c255-c7ee-41c4-bac5-d7f61a16f79d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f622c255-c7ee-41c4-bac5-d7f61a16f79d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f622c255-c7ee-41c4-bac5-d7f61a16f79d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a11e0c5f-8e10-4671-9da8-2c0911aeda6a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a11e0c5f-8e10-4671-9da8-2c0911aeda6a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a11e0c5f-8e10-4671-9da8-2c0911aeda6a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "38b322d1-4aa6-468d-b370-cc93d43272c2",
        "_uuid": "f1cc9baff7c37cdad9014bccd875f0328b9c0d9b",
        "id": "k43czKyFaigF"
      },
      "cell_type": "markdown",
      "source": [
        "### Testing there aren't any missing data"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "0031aa27-9d12-4cae-b59a-9897371789c0",
        "_uuid": "0958b0da3e0f1e2aa54914da431f47a773b8dec0",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XwcniqIjaigF",
        "outputId": "d9f7517e-667e-4e50-910d-4f609708d9d3"
      },
      "cell_type": "code",
      "source": [
        "#missing data\n",
        "total = train_df.isnull().sum().sort_values(ascending=False)\n",
        "percent = (train_df.isnull().sum()/train_df.isnull().count()).sort_values(ascending=False)\n",
        "missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n",
        "missing_data.head(20)\n",
        "print(missing_data)"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                           Total  Percent\n",
            "Age                            0      0.0\n",
            "Gender                         0      0.0\n",
            "obs_consequence                0      0.0\n",
            "mental_vs_physical             0      0.0\n",
            "phys_health_interview          0      0.0\n",
            "mental_health_interview        0      0.0\n",
            "supervisor                     0      0.0\n",
            "coworkers                      0      0.0\n",
            "phys_health_consequence        0      0.0\n",
            "mental_health_consequence      0      0.0\n",
            "leave                          0      0.0\n",
            "anonymity                      0      0.0\n",
            "seek_help                      0      0.0\n",
            "wellness_program               0      0.0\n",
            "care_options                   0      0.0\n",
            "benefits                       0      0.0\n",
            "tech_company                   0      0.0\n",
            "remote_work                    0      0.0\n",
            "no_employees                   0      0.0\n",
            "work_interfere                 0      0.0\n",
            "treatment                      0      0.0\n",
            "family_history                 0      0.0\n",
            "self_employed                  0      0.0\n",
            "age_range                      0      0.0\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "245bfde3-4bf8-4f4f-8cc6-9e1d95b632a7",
        "_uuid": "d9c414ad9ba5ed0ceb519beb410bccd8c12a117e",
        "id": "M_fML3uDaigF"
      },
      "cell_type": "markdown",
      "source": [
        "Features Scaling\n",
        "We're going to scale age, because is extremely different from the othere ones."
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b56ba09c-796d-4515-95fc-b36611cdb266",
        "_uuid": "75911eb1235de12aa6277ec8751d336f60ba9eb8",
        "id": "-DxgEB6SaigF"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Covariance_Matrix'></a>\n",
        "## **4. Covariance Matrix. Variability comparison between categories of variables**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "fa764109-e028-4ca6-a167-281f8dcf1056",
        "_uuid": "db911626ce6498bac062d8dc7e01bfe670427fb4",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "cf4qU4dYaigF",
        "outputId": "4e42a862-fe7c-415e-8515-d8bf34a3b122"
      },
      "cell_type": "code",
      "source": [
        "#correlation matrix\n",
        "corrmat = train_df.corr()\n",
        "f, ax = plt.subplots(figsize=(12, 9))\n",
        "sns.heatmap(corrmat, vmax=.8, square=True);\n",
        "plt.show()\n",
        "\n",
        "#treatment correlation matrix\n",
        "k = 10 #number of variables for heatmap\n",
        "cols = corrmat.nlargest(k, 'treatment')['treatment'].index\n",
        "cm = np.corrcoef(train_df[cols].values.T)\n",
        "sns.set(font_scale=1.25)\n",
        "hm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\n",
        "plt.show()\n",
        "\n"
      ],
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x900 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "f71d0c3d-8554-4478-b1d5-7aa461fcb7bb",
        "_uuid": "22adfaf19848e1103804bf8737cb5656fcac5388",
        "id": "6sw2scOLaigF"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Some_charts_to_see_data_relationship'></a>\n",
        "## **5. Some charts to see data relationship**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "2af9fb8b-79ac-4444-95b0-210c704afef9",
        "_uuid": "39488f9878f2ab937c4ce888eb82eba133fb175c",
        "id": "7cMTECVkaigF"
      },
      "cell_type": "markdown",
      "source": [
        "Distribiution and density by Age"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "89387b66-3a36-4b3f-98a4-254253452056",
        "_uuid": "e7288897925d3f340ba4c2e73d2ef61c6ca28c4f",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 943
        },
        "id": "68axveLsaigF",
        "outputId": "e7d92026-3c84-43d4-c836-24d68a6ab339"
      },
      "cell_type": "code",
      "source": [
        "# Distribiution and density by Age\n",
        "plt.figure(figsize=(12,8))\n",
        "sns.distplot(train_df[\"Age\"], bins=24)\n",
        "plt.title(\"Distribuition and density by Age\")\n",
        "plt.xlabel(\"Age\")\n",
        "\n"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-82-9222bdb5d403>:3: UserWarning: \n",
            "\n",
            "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
            "\n",
            "Please adapt your code to use either `displot` (a figure-level function with\n",
            "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n",
            "For a guide to updating your code to use the new functions, please see\n",
            "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
            "\n",
            "  sns.distplot(train_df[\"Age\"], bins=24)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Age')"
            ]
          },
          "metadata": {},
          "execution_count": 82
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "a8880fbd-1545-48dd-a850-1ccc6214bcdc",
        "_uuid": "9c24e2674ba7fe8cfecc0b911e6773512b7099c5",
        "id": "1ygJBR6vaigG"
      },
      "cell_type": "markdown",
      "source": [
        "Separate by treatment"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b464a345-00b2-47a2-9d3e-c7074cfaf790",
        "_uuid": "2cc9d4abe3ca092a5bf9b7a9cd9f0b4d443c0471",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 673
        },
        "id": "xLAD59CCaigG",
        "outputId": "ca5fe438-6498-4b0b-b153-25da353b5a8f"
      },
      "cell_type": "code",
      "source": [
        "# Separate by treatment or not\n",
        "g = sns.FacetGrid(train_df, col='treatment')\n",
        "g = g.map(sns.distplot, \"Age\")\n"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:848: UserWarning: \n",
            "\n",
            "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
            "\n",
            "Please adapt your code to use either `displot` (a figure-level function with\n",
            "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n",
            "For a guide to updating your code to use the new functions, please see\n",
            "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
            "\n",
            "  func(*plot_args, **plot_kwargs)\n",
            "/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:848: UserWarning: \n",
            "\n",
            "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
            "\n",
            "Please adapt your code to use either `displot` (a figure-level function with\n",
            "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n",
            "For a guide to updating your code to use the new functions, please see\n",
            "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
            "\n",
            "  func(*plot_args, **plot_kwargs)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x300 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "20b446a7-fe87-478d-9328-de7ea7afea5b",
        "_uuid": "1bfd6affb0501138a98d4dbc9c70ad491b35962c",
        "id": "03Iw6HGwaigG"
      },
      "cell_type": "markdown",
      "source": [
        "How many people has been treated?"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "81f1eb2a-c3ac-433d-a674-24aa6a33d287",
        "_uuid": "ac35d322a601a3ff9fdde64fa5e33b28dbdd10e5",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 752
        },
        "id": "hA2NqaDXaigG",
        "outputId": "a2b1a44c-caf1-42fc-8f77-8a82d74e21ca"
      },
      "cell_type": "code",
      "source": [
        "# Let see how many people has been treated\n",
        "plt.figure(figsize=(12,8))\n",
        "labels = labelDict['label_Gender']\n",
        "g = sns.countplot(x=\"treatment\", hue=\"Gender\", data=train_df)\n",
        "g.set_xticklabels(labels)\n",
        "\n",
        "plt.title('Total Distribuition by treated or not, by Gender')\n",
        "#delete the other"
      ],
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Total Distribuition by treated or not, by Gender')"
            ]
          },
          "metadata": {},
          "execution_count": 84
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "d7a9a45c-0df3-48a4-9ab2-e5aaae9abe7f",
        "_uuid": "a781bf88a14f5bb937ede09d81365f16bdcbbe3f",
        "id": "kCE3OfzBaigG"
      },
      "cell_type": "markdown",
      "source": [
        "Draw a nested barplot to show probabilities for class and sex"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "210c02cf-9296-4373-8725-bd13b819a9e4",
        "_uuid": "2b931335e19a15bf897fa8a6eabcd26cb263503a",
        "scrolled": true,
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "0Lw-erKPaigG",
        "outputId": "eeedff58-390f-4078-9dce-fa557a87f512"
      },
      "cell_type": "code",
      "source": [
        "o = labelDict['label_age_range']\n",
        "\n",
        "g = sns.catplot(x=\"age_range\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n",
        "g.set_xticklabels(o)\n",
        "\n",
        "plt.title('Probability of mental health condition')\n",
        "plt.ylabel('Probability x 100')\n",
        "plt.xlabel('Age')\n",
        "\n",
        "# Replace legend labels\n",
        "new_labels = labelDict['label_Gender']\n",
        "for t, l in zip(g._legend.texts, new_labels):\n",
        "    t.set_text(l)\n",
        "\n",
        "# Positioning the legend\n",
        "g.fig.subplots_adjust(top=0.9, right=0.8)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-85-4578c38207eb>:3: FutureWarning: \n",
            "\n",
            "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
            "\n",
            "  g = sns.catplot(x=\"age_range\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1092.15x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "6517af95-3b02-4b50-b246-ea56f61f6113",
        "_uuid": "4ed2e62093d643cf105829ff2ae9a9917b110996",
        "id": "ndfXo66NaigG"
      },
      "cell_type": "markdown",
      "source": [
        "Barplot to show probabilities for family history"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b93d6150-b23a-4b71-8cf8-a10b811152a8",
        "_uuid": "605bf86a497f0b7989b57a3458088131f564e2a8",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 574
        },
        "id": "hfJ67_xIaigG",
        "outputId": "b3cadfda-45f4-48c2-f817-d664d2723efb"
      },
      "cell_type": "code",
      "source": [
        "o = labelDict['label_family_history']\n",
        "\n",
        "g = sns.catplot(x=\"family_history\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n",
        "g.set_xticklabels(o)\n",
        "\n",
        "plt.title('Probability of mental health condition')\n",
        "plt.ylabel('Probability x 100')\n",
        "plt.xlabel('Family History')\n",
        "\n",
        "# Replace legend labels\n",
        "new_labels = labelDict['label_Gender']\n",
        "for t, l in zip(g._legend.texts, new_labels):\n",
        "    t.set_text(l)\n",
        "\n",
        "# Positioning the legend\n",
        "g.fig.subplots_adjust(top=0.9, right=0.8)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-86-2f3f11bc669a>:3: FutureWarning: \n",
            "\n",
            "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
            "\n",
            "  g = sns.catplot(x=\"family_history\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1092.15x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "beecc2fe-4cd8-489c-bc0e-bb5ad633931c",
        "_uuid": "7c7baa6c000ab81edb071071d45bac309f796d80",
        "id": "7dD_vROHaigH"
      },
      "cell_type": "markdown",
      "source": [
        "Barplot to show probabilities for care options"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "c77da62e-f71f-49fb-9c13-fe2fea3d474e",
        "_uuid": "bc61dc5b0c4c0a8204453524438006a84f6168d1",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 574
        },
        "id": "hvYMiyMIaigH",
        "outputId": "59721c1b-a39f-49ee-a3cf-3f299fa32e7a"
      },
      "cell_type": "code",
      "source": [
        "o = labelDict['label_care_options']\n",
        "\n",
        "g = sns.catplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n",
        "g.set_xticklabels(o)\n",
        "\n",
        "plt.title('Probability of mental health condition')\n",
        "plt.ylabel('Probability x 100')\n",
        "plt.xlabel('Care options')\n",
        "\n",
        "# Replace legend labels\n",
        "new_labels = labelDict['label_Gender']\n",
        "for t, l in zip(g._legend.texts, new_labels):\n",
        "    t.set_text(l)\n",
        "\n",
        "# Positioning the legend\n",
        "g.fig.subplots_adjust(top=0.9, right=0.8)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-87-02307a3d6099>:3: FutureWarning: \n",
            "\n",
            "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
            "\n",
            "  g = sns.catplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1092.15x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "56de0fc1-8ee1-41b8-868e-133db7635c64",
        "_uuid": "5f9e29712de3b44df01755c481b898a38e508f07",
        "id": "cGYpxgO6aigH"
      },
      "cell_type": "markdown",
      "source": [
        "Barplot to show probabilities for benefits"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "4fab65ea-f3f5-4831-9f3f-7560fb908d3e",
        "_uuid": "25c2da49fd8c83fc2d42355c0e147f439c00a7c0",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 574
        },
        "id": "LFLbfWKoaigH",
        "outputId": "fc94e260-676e-4fe9-c566-c9a066e1785b"
      },
      "cell_type": "code",
      "source": [
        "o = labelDict['label_benefits']\n",
        "\n",
        "g = sns.catplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n",
        "g.set_xticklabels(o)\n",
        "\n",
        "plt.title('Probability of mental health condition')\n",
        "plt.ylabel('Probability x 100')\n",
        "plt.xlabel('Benefits')\n",
        "\n",
        "# Replace legend labels\n",
        "new_labels = labelDict['label_Gender']\n",
        "for t, l in zip(g._legend.texts, new_labels):\n",
        "    t.set_text(l)\n",
        "\n",
        "# Positioning the legend\n",
        "g.fig.subplots_adjust(top=0.9, right=0.8)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-88-a29d1e8e9269>:3: FutureWarning: \n",
            "\n",
            "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
            "\n",
            "  g = sns.catplot(x=\"care_options\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1092.15x500 with 1 Axes>"
            ],
            "image/png": "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f9ShQ4e0evVqOTk5WfqazWa98cYbWrt2rfLly6dq1aqpYMGC+vPPPzV9+nT98ssvmj9/fop9li5dqtmzZ6tSpUqqXr26HB0d9ddff2n16tXasmWLFixYIG9v7/vWmN7XLdlrr72m7du3q379+nriiSe0Z88ezZ49W1FRUZo6dWq6X5t169bpzTff1O3bt1WxYkW1atVK169f119//aXJkyerR48eKlCggCQpKipKzzzzjM6ePatSpUqpZcuWio6O1s6dO7Vjxw6NHj1aAwYMSPM4Gan34MGD6tevn27evClPT09VqlRJp0+fVlBQkJ5++ul0nVe+fPnUtWtX/frrr7p8+bLatGmjfPnypft1yalzBQAgyxkAYCVPT0/D09MzVbvZbDZ69epleHp6Gh9//HGq/q1atTL++eefVPt06NDB8PT0NCZPnmyYzWbLtvXr1xve3t5GrVq1jKioKEv72bNnLWN27NjRuHLlimXbmTNnjMaNGxuenp7Gpk2bUhxr586dxqVLl1K0JSUlGdOmTTM8PT2NUaNGpdhm7XH69u1reHp6GmfPnk3R3rx58zRfN09PT6N58+Yp2n7//XfD09PTGDlyZKr+hmEYixcvNjw9PY33338/1bbffvvN8PT0NJ577rk09/2v8+fPGzVq1DAqV65sbN682dKelJRkTJw40fD09DQCAwPTVfeDLF++3PKaTp061fL9NpvNxqhRowxPT0+jffv2RocOHVK83qGhoWke7/r164afn59RuXJlY/Xq1Sm2/fHHH4avr69Rq1atFGMlv7aenp7GiBEjjH///deybdOmTYanp6fRrFmzFGMl/yz07dv3nuf2888/G7GxsSna/v33X+Ptt982PD09jWnTpmV4zP9K/tmqWbOmsW/fPkv7zZs3Le+9pUuXpthn1qxZluNcvHgxRW1jxowxPD09jSlTpqTYJzw83IiIiEh1/GXLlhmenp7Gs88+m2pbWj/f6TnH5O9Fu3btUtQXERFh+Pj4GJ6ensaZM2fuuf/dTp06ZVSvXt2oUqWK8cMPP6TYZjabjV9//TXF9zs4ONjw9PQ0Xn311RTtu3fvNmrWrGlUrlzZOHz4cKbqNZvNRvv27Q1PT0/js88+SzHWd999Zxnvv+/1zz//3PD09DSWL1+eov1e15cH7ZcT5woAQHbgthEAWSYpKUmnT5/WmDFj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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "bebe13ce-94d5-487c-88b8-7a634f361223",
        "_uuid": "9cfc643a94d39e2c06ed870c306deee6a9219b60",
        "id": "Q75_nBh2aigH"
      },
      "cell_type": "markdown",
      "source": [
        "Barplot to show probabilities for work interfere"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "1606646f-0db7-41f9-b4bc-f8f2c982087c",
        "_uuid": "a7f3daeded334645d4cf5bd202e3116811159481",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 574
        },
        "id": "VRb4Pt6faigH",
        "outputId": "4fb80e4f-4e7e-4909-dec0-44c0006aba8a"
      },
      "cell_type": "code",
      "source": [
        "o = labelDict['label_work_interfere']\n",
        "\n",
        "g = sns.catplot(x=\"work_interfere\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n",
        "g.set_xticklabels(o)\n",
        "\n",
        "plt.title('Probability of mental health condition')\n",
        "plt.ylabel('Probability x 100')\n",
        "plt.xlabel('Work Interference')\n",
        "\n",
        "# Replace legend labels\n",
        "new_labels = labelDict['label_Gender']\n",
        "for t, l in zip(g._legend.texts, new_labels):\n",
        "    t.set_text(l)\n",
        "\n",
        "# Positioning the legend\n",
        "g.fig.subplots_adjust(top=0.9, right=0.8)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-89-877413b2f4cd>:3: FutureWarning: \n",
            "\n",
            "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
            "\n",
            "  g = sns.catplot(x=\"work_interfere\", y=\"treatment\", hue=\"Gender\", data=train_df, kind=\"bar\", ci=None, height=5, aspect=2, legend_out=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1092.15x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "4ea1fe2d-e6bd-434f-807c-9936f17be784",
        "_uuid": "ebb8c1dc1fdd5dcfa5f9d1b05db3d23323b21adc",
        "id": "bx0om99eaigH"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Scaling_and_fitting'></a>\n",
        "## **6. Scaling and fitting** ##\n",
        "\n"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "a95cf3ba-36d4-4df5-9797-2ccf1f018f5a",
        "_uuid": "5bdd6122fff56b5957a59210160269e7a32af869",
        "id": "PV7UacIEaigI"
      },
      "cell_type": "markdown",
      "source": [
        "Features Scaling\n",
        "We're going to scale age, because is extremely different from the othere ones."
      ]
    },
    {
      "metadata": {
        "_cell_guid": "6ae3cc24-d8cf-4ab2-915d-091007ff2457",
        "_uuid": "d8dcf5e62e990fb6747f5695cbce9919f5cdec4b",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "id": "joIOahrOaigI",
        "outputId": "3a30e38d-a775-4d21-e668-209606b479e5"
      },
      "cell_type": "code",
      "source": [
        "# Scaling Age\n",
        "scaler = MinMaxScaler()\n",
        "train_df['Age'] = scaler.fit_transform(train_df[['Age']])\n",
        "train_df.head()\n"
      ],
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Age  Gender  self_employed  family_history  treatment  work_interfere  \\\n",
              "0  0.431818       0              0               0          1               2   \n",
              "1  0.590909       1              0               0          0               3   \n",
              "2  0.318182       1              0               0          0               3   \n",
              "3  0.295455       1              0               1          1               2   \n",
              "4  0.295455       1              0               0          0               1   \n",
              "\n",
              "   no_employees  remote_work  tech_company  benefits  ...  leave  \\\n",
              "0             4            0             1         2  ...      2   \n",
              "1             5            0             0         0  ...      0   \n",
              "2             4            0             1         1  ...      1   \n",
              "3             2            0             1         1  ...      1   \n",
              "4             1            1             1         2  ...      0   \n",
              "\n",
              "   mental_health_consequence  phys_health_consequence  coworkers  supervisor  \\\n",
              "0                          1                        1          1           2   \n",
              "1                          0                        1          0           0   \n",
              "2                          1                        1          2           2   \n",
              "3                          2                        2          1           0   \n",
              "4                          1                        1          1           2   \n",
              "\n",
              "   mental_health_interview  phys_health_interview  mental_vs_physical  \\\n",
              "0                        1                      0                   2   \n",
              "1                        1                      1                   0   \n",
              "2                        2                      2                   1   \n",
              "3                        0                      0                   1   \n",
              "4                        2                      2                   0   \n",
              "\n",
              "   obs_consequence  age_range  \n",
              "0                0          2  \n",
              "1                0          2  \n",
              "2                0          2  \n",
              "3                1          2  \n",
              "4                0          2  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eb3028b9-47bd-451a-b7e5-9b30d933bc62\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>family_history</th>\n",
              "      <th>treatment</th>\n",
              "      <th>work_interfere</th>\n",
              "      <th>no_employees</th>\n",
              "      <th>remote_work</th>\n",
              "      <th>tech_company</th>\n",
              "      <th>benefits</th>\n",
              "      <th>...</th>\n",
              "      <th>leave</th>\n",
              "      <th>mental_health_consequence</th>\n",
              "      <th>phys_health_consequence</th>\n",
              "      <th>coworkers</th>\n",
              "      <th>supervisor</th>\n",
              "      <th>mental_health_interview</th>\n",
              "      <th>phys_health_interview</th>\n",
              "      <th>mental_vs_physical</th>\n",
              "      <th>obs_consequence</th>\n",
              "      <th>age_range</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.431818</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.590909</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.318182</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.295455</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.295455</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb3028b9-47bd-451a-b7e5-9b30d933bc62')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eb3028b9-47bd-451a-b7e5-9b30d933bc62 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eb3028b9-47bd-451a-b7e5-9b30d933bc62');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-99dab387-a55b-4eca-bbe0-a4f661b1c8ae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99dab387-a55b-4eca-bbe0-a4f661b1c8ae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-99dab387-a55b-4eca-bbe0-a4f661b1c8ae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "653ecfa5-8248-41e3-a470-655859fd33f8",
        "_uuid": "ce9cbb939ed0411f3280348e888e448a623a55c5",
        "id": "JRlvJchDaigO"
      },
      "cell_type": "markdown",
      "source": [
        "Spliltting the dataset"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "3687ae06-561c-4a0c-94a4-aad2275022ce",
        "_uuid": "6477bae9fc3654aef51e7048c0382c7888c9e36c",
        "collapsed": true,
        "trusted": true,
        "id": "ACh68i1WaigO"
      },
      "cell_type": "code",
      "source": [
        "# define X and y\n",
        "feature_cols = ['Age', 'Gender', 'family_history', 'benefits', 'care_options', 'anonymity', 'leave', 'work_interfere']\n",
        "X = train_df[feature_cols]\n",
        "y = train_df.treatment\n",
        "\n",
        "# split X and y into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=0)\n",
        "\n",
        "# Create dictionaries for final graph\n",
        "# Use: methodDict['Stacking'] = accuracy_score\n",
        "methodDict = {}\n",
        "rmseDict = ()\n",
        "\n"
      ],
      "execution_count": 91,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "b958ffcc-6625-421e-b5d0-57cdd753d32f",
        "_uuid": "5cbfa3c0808b550849fbe80158556775a4367b03",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 829
        },
        "id": "FGFard9caigP",
        "outputId": "5c2eba16-f13b-4112-bf85-4c6b11165053"
      },
      "cell_type": "code",
      "source": [
        "# Build a forest and compute the feature importances\n",
        "forest = ExtraTreesClassifier(n_estimators=250,\n",
        "                              random_state=0)\n",
        "\n",
        "forest.fit(X, y)\n",
        "importances = forest.feature_importances_\n",
        "std = np.std([tree.feature_importances_ for tree in forest.estimators_],\n",
        "             axis=0)\n",
        "indices = np.argsort(importances)[::-1]\n",
        "\n",
        "labels = []\n",
        "for f in range(X.shape[1]):\n",
        "    labels.append(feature_cols[f])\n",
        "\n",
        "# Plot the feature importances of the forest\n",
        "plt.figure(figsize=(12,8))\n",
        "plt.title(\"Feature importances\")\n",
        "plt.bar(range(X.shape[1]), importances[indices],\n",
        "       color=\"r\", yerr=std[indices], align=\"center\")\n",
        "plt.xticks(range(X.shape[1]), labels, rotation='vertical')\n",
        "plt.xlim([-1, X.shape[1]])\n",
        "plt.show()"
      ],
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b07c9bf0-3323-4cb3-9589-fe64b1fd854a",
        "_uuid": "a5a4b72ee4b193749ff0f59acb689c5900d98ec1",
        "id": "QVlVcrcVaigP"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Tuning'></a>\n",
        "## **7. Tuning**\n",
        "### **Evaluating a Classification Model.** <br>\n",
        "This function will evalue:<br>\n",
        "* **Classification accuracy: **percentage of correct predictions\n",
        "* **Null accuracy:** accuracy that could be achieved by always predicting the most frequent class\n",
        "* **Percentage of ones**<br>\n",
        "* **Percentage of zero**s<br>\n",
        "* **Confusion matrix: **Table that describes the performance of a classification model\n",
        "        True Positives (TP): we correctly predicted that they do have diabetes\n",
        "        True Negatives (TN): we correctly predicted that they don't have diabetes\n",
        "        False Positives (FP): we incorrectly predicted that they do have diabetes (a \"Type I error\")\n",
        "        Falsely predict positive\n",
        "        False Negatives (FN): we incorrectly predicted that they don't have diabetes (a \"Type II error\")\n",
        "        Falsely predict negative\n",
        "\n",
        "* **False Positive Rate**<br>\n",
        "* **Precision of Positive value**<br>\n",
        "* **AUC:** is the percentage of the ROC plot that is underneath the curve\n",
        "        .90-1 = excellent (A)\n",
        "        .80-.90 = good (B)\n",
        "        .70-.80 = fair (C)\n",
        "        .60-.70 = poor (D)\n",
        "        .50-.60 = fail (F)\n",
        "And some others values for tuning processes.\n",
        "More information:  [http://www.ritchieng.com/machine-learning-evaluate-classification-model/]:\n"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "ae969199-93b6-4566-a677-69560ab1760f",
        "_uuid": "8f672b391aa354c77032b1f0c174a59aaa75cea9",
        "id": "M1vSSKRzaigP"
      },
      "cell_type": "markdown",
      "source": []
    },
    {
      "metadata": {
        "_cell_guid": "0c78481e-0e93-4369-932f-d2b21f1dea0c",
        "_uuid": "dec481c2407ad73187e7b678fbdb9812f6a636a8",
        "collapsed": true,
        "trusted": true,
        "id": "xYGNZsjTaigP"
      },
      "cell_type": "code",
      "source": [
        "def evalClassModel(model, y_test, y_pred_class, plot=False):\n",
        "    #Classification accuracy: percentage of correct predictions\n",
        "    # calculate accuracy\n",
        "    print('Accuracy:', metrics.accuracy_score(y_test, y_pred_class))\n",
        "\n",
        "    #Null accuracy: accuracy that could be achieved by always predicting the most frequent class\n",
        "    # examine the class distribution of the testing set (using a Pandas Series method)\n",
        "    print('Null accuracy:\\n', y_test.value_counts())\n",
        "\n",
        "    # calculate the percentage of ones\n",
        "    print('Percentage of ones:', y_test.mean())\n",
        "\n",
        "    # calculate the percentage of zeros\n",
        "    print('Percentage of zeros:',1 - y_test.mean())\n",
        "\n",
        "    #Comparing the true and predicted response values\n",
        "    print('True:', y_test.values[0:25])\n",
        "    print('Pred:', y_pred_class[0:25])\n",
        "\n",
        "    #Conclusion:\n",
        "    #Classification accuracy is the easiest classification metric to understand\n",
        "    #But, it does not tell you the underlying distribution of response values\n",
        "    #And, it does not tell you what \"types\" of errors your classifier is making\n",
        "\n",
        "    #Confusion matrix\n",
        "    # save confusion matrix and slice into four pieces\n",
        "    confusion = metrics.confusion_matrix(y_test, y_pred_class)\n",
        "    #[row, column]\n",
        "    TP = confusion[1, 1]\n",
        "    TN = confusion[0, 0]\n",
        "    FP = confusion[0, 1]\n",
        "    FN = confusion[1, 0]\n",
        "\n",
        "    # visualize Confusion Matrix\n",
        "    sns.heatmap(confusion,annot=True,fmt=\"d\")\n",
        "    plt.title('Confusion Matrix')\n",
        "    plt.xlabel('Predicted')\n",
        "    plt.ylabel('Actual')\n",
        "    plt.show()\n",
        "\n",
        "    #Metrics computed from a confusion matrix\n",
        "    #Classification Accuracy: Overall, how often is the classifier correct?\n",
        "    accuracy = metrics.accuracy_score(y_test, y_pred_class)\n",
        "    print('Classification Accuracy:', accuracy)\n",
        "\n",
        "    #Classification Error: Overall, how often is the classifier incorrect?\n",
        "    print('Classification Error:', 1 - metrics.accuracy_score(y_test, y_pred_class))\n",
        "\n",
        "    #False Positive Rate: When the actual value is negative, how often is the prediction incorrect?\n",
        "    false_positive_rate = FP / float(TN + FP)\n",
        "    print('False Positive Rate:', false_positive_rate)\n",
        "\n",
        "    #Precision: When a positive value is predicted, how often is the prediction correct?\n",
        "    print('Precision:', metrics.precision_score(y_test, y_pred_class))\n",
        "\n",
        "\n",
        "    # IMPORTANT: first argument is true values, second argument is predicted probabilities\n",
        "    print('AUC Score:', metrics.roc_auc_score(y_test, y_pred_class))\n",
        "\n",
        "    # calculate cross-validated AUC\n",
        "    print('Cross-validated AUC:', cross_val_score(model, X, y, cv=10, scoring='roc_auc').mean())\n",
        "\n",
        "    ##########################################\n",
        "    #Adjusting the classification threshold\n",
        "    ##########################################\n",
        "    # print the first 10 predicted responses\n",
        "    # 1D array (vector) of binary values (0, 1)\n",
        "    print('First 10 predicted responses:\\n', model.predict(X_test)[0:10])\n",
        "\n",
        "    # print the first 10 predicted probabilities of class membership\n",
        "    print('First 10 predicted probabilities of class members:\\n', model.predict_proba(X_test)[0:10])\n",
        "\n",
        "    # print the first 10 predicted probabilities for class 1\n",
        "    model.predict_proba(X_test)[0:10, 1]\n",
        "\n",
        "    # store the predicted probabilities for class 1\n",
        "    y_pred_prob = model.predict_proba(X_test)[:, 1]\n",
        "\n",
        "    if plot == True:\n",
        "        # histogram of predicted probabilities\n",
        "        # adjust the font size\n",
        "        plt.rcParams['font.size'] = 12\n",
        "        # 8 bins\n",
        "        plt.hist(y_pred_prob, bins=8)\n",
        "\n",
        "        # x-axis limit from 0 to 1\n",
        "        plt.xlim(0,1)\n",
        "        plt.title('Histogram of predicted probabilities')\n",
        "        plt.xlabel('Predicted probability of treatment')\n",
        "        plt.ylabel('Frequency')\n",
        "\n",
        "\n",
        "    # predict treatment if the predicted probability is greater than 0.3\n",
        "    # it will return 1 for all values above 0.3 and 0 otherwise\n",
        "    # results are 2D so we slice out the first column\n",
        "    y_pred_prob = y_pred_prob.reshape(-1,1)\n",
        "    y_pred_class = binarize(y_pred_prob, 0.3)[0]\n",
        "\n",
        "    # print the first 10 predicted probabilities\n",
        "    print('First 10 predicted probabilities:\\n', y_pred_prob[0:10])\n",
        "\n",
        "    ##########################################\n",
        "    #ROC Curves and Area Under the Curve (AUC)\n",
        "    ##########################################\n",
        "\n",
        "    #Question: Wouldn't it be nice if we could see how sensitivity and specificity are affected by various thresholds, without actually changing the threshold?\n",
        "    #Answer: Plot the ROC curve!\n",
        "\n",
        "\n",
        "    #AUC is the percentage of the ROC plot that is underneath the curve\n",
        "    #Higher value = better classifier\n",
        "    roc_auc = metrics.roc_auc_score(y_test, y_pred_prob)\n",
        "\n",
        "\n",
        "\n",
        "    # IMPORTANT: first argument is true values, second argument is predicted probabilities\n",
        "    # we pass y_test and y_pred_prob\n",
        "    # we do not use y_pred_class, because it will give incorrect results without generating an error\n",
        "    # roc_curve returns 3 objects fpr, tpr, thresholds\n",
        "    # fpr: false positive rate\n",
        "    # tpr: true positive rate\n",
        "    fpr, tpr, thresholds = metrics.roc_curve(y_test, y_pred_prob)\n",
        "    if plot == True:\n",
        "        plt.figure()\n",
        "\n",
        "        plt.plot(fpr, tpr, color='darkorange', label='ROC curve (area = %0.2f)' % roc_auc)\n",
        "        plt.plot([0, 1], [0, 1], color='navy', linestyle='--')\n",
        "        plt.xlim([0.0, 1.0])\n",
        "        plt.ylim([0.0, 1.0])\n",
        "        plt.rcParams['font.size'] = 12\n",
        "        plt.title('ROC curve for treatment classifier')\n",
        "        plt.xlabel('False Positive Rate (1 - Specificity)')\n",
        "        plt.ylabel('True Positive Rate (Sensitivity)')\n",
        "        plt.legend(loc=\"lower right\")\n",
        "        plt.show()\n",
        "\n",
        "    # define a function that accepts a threshold and prints sensitivity and specificity\n",
        "    def evaluate_threshold(threshold):\n",
        "        #Sensitivity: When the actual value is positive, how often is the prediction correct?\n",
        "        #Specificity: When the actual value is negative, how often is the prediction correct?print('Sensitivity for ' + str(threshold) + ' :', tpr[thresholds > threshold][-1])\n",
        "        print('Specificity for ' + str(threshold) + ' :', 1 - fpr[thresholds > threshold][-1])\n",
        "\n",
        "    # One way of setting threshold\n",
        "    predict_mine = np.where(y_pred_prob > 0.50, 1, 0)\n",
        "    confusion = metrics.confusion_matrix(y_test, predict_mine)\n",
        "    print(confusion)\n",
        "\n",
        "\n",
        "\n",
        "    return accuracy"
      ],
      "execution_count": 93,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "3e4552da-c5cc-45af-81ca-05a090922bb0",
        "_uuid": "4e5d57cfad5eee9dd3a34ed9da5fdccce8dc7c3a",
        "id": "z7F8CZ1maigQ"
      },
      "cell_type": "markdown",
      "source": [
        "### **Tuning with cross validation score**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "ff07e090-5af7-4a06-b553-c86a7a75cd64",
        "_uuid": "8ac94690bafb3277fec2d35bd196c317a33c9555",
        "collapsed": true,
        "trusted": true,
        "id": "ESlhA_Z-aigQ"
      },
      "cell_type": "code",
      "source": [
        "##########################################\n",
        "# Tuning with cross validation score\n",
        "##########################################\n",
        "def tuningCV(knn):\n",
        "\n",
        "    # search for an optimal value of K for KNN\n",
        "    k_range = list(range(1, 31))\n",
        "    k_scores = []\n",
        "    for k in k_range:\n",
        "        knn = KNeighborsClassifier(n_neighbors=k)\n",
        "        scores = cross_val_score(knn, X, y, cv=10, scoring='accuracy')\n",
        "        k_scores.append(scores.mean())\n",
        "    print(k_scores)\n",
        "    # plot the value of K for KNN (x-axis) versus the cross-validated accuracy (y-axis)\n",
        "    plt.plot(k_range, k_scores)\n",
        "    plt.xlabel('Value of K for KNN')\n",
        "    plt.ylabel('Cross-Validated Accuracy')\n",
        "    plt.show()\n"
      ],
      "execution_count": 94,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "55a2a701-b435-4143-bc7b-c56b4a24491f",
        "_uuid": "1cae2be4f65fc14d55eb1331110f69f016df2dbc",
        "id": "8XFCglZpaigQ"
      },
      "cell_type": "markdown",
      "source": [
        "### **Tuning with GridSearchCV** ###"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "736e766c-b1c8-4d7e-b1b0-1bdab402ee4f",
        "_uuid": "3f64ad65f27cd4a92e5593ed6359245f34ba0e8e",
        "collapsed": true,
        "trusted": true,
        "id": "n_ATungPaigQ"
      },
      "cell_type": "code",
      "source": [
        "def tuningGridSerach(knn):\n",
        "    #More efficient parameter tuning using GridSearchCV\n",
        "    # define the parameter values that should be searched\n",
        "    k_range = list(range(1, 31))\n",
        "    print(k_range)\n",
        "\n",
        "    # create a parameter grid: map the parameter names to the values that should be searched\n",
        "    param_grid = dict(n_neighbors=k_range)\n",
        "    print(param_grid)\n",
        "\n",
        "    # instantiate the grid\n",
        "    grid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy')\n",
        "\n",
        "    # fit the grid with data\n",
        "    grid.fit(X, y)\n",
        "\n",
        "    # view the complete results (list of named tuples)\n",
        "    grid.grid_scores_\n",
        "\n",
        "    # examine the first tuple\n",
        "    print(grid.grid_scores_[0].parameters)\n",
        "    print(grid.grid_scores_[0].cv_validation_scores)\n",
        "    print(grid.grid_scores_[0].mean_validation_score)\n",
        "\n",
        "    # create a list of the mean scores only\n",
        "    grid_mean_scores = [result.mean_validation_score for result in grid.grid_scores_]\n",
        "    print(grid_mean_scores)\n",
        "\n",
        "    # plot the results\n",
        "    plt.plot(k_range, grid_mean_scores)\n",
        "    plt.xlabel('Value of K for KNN')\n",
        "    plt.ylabel('Cross-Validated Accuracy')\n",
        "    plt.show()\n",
        "\n",
        "    # examine the best model\n",
        "    print('GridSearch best score', grid.best_score_)\n",
        "    print('GridSearch best params', grid.best_params_)\n",
        "    print('GridSearch best estimator', grid.best_estimator_)\n"
      ],
      "execution_count": 95,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "9ff8088d-53b8-4724-ab5a-3c23e8728b61",
        "_uuid": "2ab0cb978d8869389d97fb4d29f4cab1c3a33ba7",
        "id": "kty4mqYoaigQ"
      },
      "cell_type": "markdown",
      "source": [
        "### **Tuning with RandomizedSearchCV** ###"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "446bfe3e-b42f-4821-a20a-2cb07fd07c50",
        "_uuid": "b8d3212c33baad0e847e7a36272feb2ef31c4d5e",
        "collapsed": true,
        "trusted": true,
        "id": "LIHLPDYpaigQ"
      },
      "cell_type": "code",
      "source": [
        "def tuningRandomizedSearchCV(model, param_dist):\n",
        "    #Searching multiple parameters simultaneously\n",
        "    # n_iter controls the number of searches\n",
        "    rand = RandomizedSearchCV(model, param_dist, cv=10, scoring='accuracy', n_iter=10, random_state=5)\n",
        "    rand.fit(X, y)\n",
        "    rand.grid_scores_\n",
        "\n",
        "    # examine the best model\n",
        "    print('Rand. Best Score: ', rand.best_score_)\n",
        "    print('Rand. Best Params: ', rand.best_params_)\n",
        "\n",
        "    # run RandomizedSearchCV 20 times (with n_iter=10) and record the best score\n",
        "    best_scores = []\n",
        "    for _ in range(20):\n",
        "        rand = RandomizedSearchCV(model, param_dist, cv=10, scoring='accuracy', n_iter=10)\n",
        "        rand.fit(X, y)\n",
        "        best_scores.append(round(rand.best_score_, 3))\n",
        "    print(best_scores)"
      ],
      "execution_count": 96,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "70d61d3d-4b78-43cb-bccf-d7588dc61762",
        "_uuid": "695a98ccaa5870275bc2fe91ef9527dbb6833368",
        "id": "kCyqV0_WaigQ"
      },
      "cell_type": "markdown",
      "source": [
        "### **Tuning with searching multiple parameters simultaneously** ###"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "114d4734-9647-4f09-b1bd-20c022421011",
        "_uuid": "0f4aad3e3f129aadfda0828345ce6418d46c5cf2",
        "collapsed": true,
        "trusted": true,
        "id": "YKwpiArvaigQ"
      },
      "cell_type": "code",
      "source": [
        "def tuningMultParam(knn):\n",
        "\n",
        "    #Searching multiple parameters simultaneously\n",
        "    # define the parameter values that should be searched\n",
        "    k_range = list(range(1, 31))\n",
        "    weight_options = ['uniform', 'distance']\n",
        "\n",
        "    # create a parameter grid: map the parameter names to the values that should be searched\n",
        "    param_grid = dict(n_neighbors=k_range, weights=weight_options)\n",
        "    print(param_grid)\n",
        "\n",
        "    # instantiate and fit the grid\n",
        "    grid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy')\n",
        "    grid.fit(X, y)\n",
        "\n",
        "    # view the complete results\n",
        "    print(grid.grid_scores_)\n",
        "\n",
        "    # examine the best model\n",
        "    print('Multiparam. Best Score: ', grid.best_score_)\n",
        "    print('Multiparam. Best Params: ', grid.best_params_)"
      ],
      "execution_count": 97,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "2e05b3654a69f79cce46c2f5f007933de7dd91dc",
        "id": "kwpLXAEraigR"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Evaluating_models'></a>\n",
        "## **8. Evaluating models**<br><br>\n",
        "<a id='Logistic_regression'></a>\n",
        "### Logistic Regression"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "8613beea-11e3-426b-91f6-39df3626eaf9",
        "_uuid": "89f5e2c8ec51637568ac22982649205ca1c340e2",
        "collapsed": true,
        "trusted": true,
        "id": "tIm49m8VaigR"
      },
      "cell_type": "code",
      "source": [
        "def logisticRegression():\n",
        "    # train a logistic regression model on the training set\n",
        "    logreg = LogisticRegression()\n",
        "    logreg.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = logreg.predict(X_test)\n",
        "\n",
        "    print('########### Logistic Regression ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(logreg, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['Log. Regres.'] = accuracy_score * 100"
      ],
      "execution_count": 98,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "de99d1dd-eb98-478c-9ed0-3cb518eac4b2",
        "_uuid": "1f71d045fa89ece846fe9e44559f057293e8bdf7",
        "id": "w2Pa52yBaigR"
      },
      "cell_type": "markdown",
      "source": [
        "\n"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "2c090f3c-ecc9-433d-84a9-0d8f56cfd75d",
        "_uuid": "dd4c840a2b9a7ed7ad737730c4f780d11d603699",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "laW29yY0aigR",
        "outputId": "ac0f216a-4c8d-4541-dec8-b19bf4ceca49"
      },
      "cell_type": "code",
      "source": [
        "logisticRegression()"
      ],
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "########### Logistic Regression ###############\n",
            "Accuracy: 0.7983870967741935\n",
            "Null accuracy:\n",
            " 1    191\n",
            "0    181\n",
            "Name: treatment, dtype: int64\n",
            "Percentage of ones: 0.5134408602150538\n",
            "Percentage of zeros: 0.48655913978494625\n",
            "True: [1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 1 1 0 0]\n",
            "Pred: [1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 0 0]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Classification Accuracy: 0.7983870967741935\n",
            "Classification Error: 0.2016129032258065\n",
            "False Positive Rate: 0.2430939226519337\n",
            "Precision: 0.7843137254901961\n",
            "AUC Score: 0.7973012062133001\n",
            "Cross-validated AUC: 0.8769653793009331\n",
            "First 10 predicted responses:\n",
            " [1 1 0 0 1 1 0 1 1 1]\n",
            "First 10 predicted probabilities of class members:\n",
            " [[0.42573782 0.57426218]\n",
            " [0.10686111 0.89313889]\n",
            " [0.87979333 0.12020667]\n",
            " [0.96061536 0.03938464]\n",
            " [0.19377767 0.80622233]\n",
            " [0.04666581 0.95333419]\n",
            " [0.77647167 0.22352833]\n",
            " [0.46594523 0.53405477]\n",
            " [0.37869751 0.62130249]\n",
            " [0.21474308 0.78525692]]\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-99-260b0faa3c55>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlogisticRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-98-277dcd6d3c73>\u001b[0m in \u001b[0;36mlogisticRegression\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'########### Logistic Regression ###############'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m     \u001b[0maccuracy_score\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mevalClassModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogreg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred_class\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m     \u001b[0;31m#Data for final graph\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-93-31671605f5dc>\u001b[0m in \u001b[0;36mevalClassModel\u001b[0;34m(model, y_test, y_pred_class, plot)\u001b[0m\n\u001b[1;32m     95\u001b[0m     \u001b[0;31m# results are 2D so we slice out the first column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0my_pred_prob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my_pred_prob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 97\u001b[0;31m     \u001b[0my_pred_class\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbinarize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_pred_prob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     98\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m     \u001b[0;31m# print the first 10 predicted probabilities\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: binarize() takes 1 positional argument but 2 were given"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "74295e39-9b93-4601-8305-d1301e5fbd72",
        "_uuid": "8d69bf0ffde7e26e29b7bced3544432bf02ed86f",
        "id": "YvPLvP2oaigR"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='KNeighborsClassifier'></a>\n",
        "### KNeighbors Classifier"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "c45537f3-72fa-47ff-a840-898e5bbed29d",
        "_uuid": "d5a089e0f01dce205366b7a99abbc3a6bb5568cc",
        "collapsed": true,
        "trusted": true,
        "id": "-GuRpFCbaigR"
      },
      "cell_type": "code",
      "source": [
        "def Knn():\n",
        "    # Calculating the best parameters\n",
        "    knn = KNeighborsClassifier(n_neighbors=5)\n",
        "\n",
        "    # From https://github.com/justmarkham/scikit-learn-videos/blob/master/08_grid_search.ipynb\n",
        "    #tuningCV(knn)\n",
        "    #tuningGridSerach(knn)\n",
        "    #tuningMultParam(knn)\n",
        "\n",
        "    # define the parameter values that should be searched\n",
        "    k_range = list(range(1, 31))\n",
        "    weight_options = ['uniform', 'distance']\n",
        "\n",
        "    # specify \"parameter distributions\" rather than a \"parameter grid\"\n",
        "    param_dist = dict(n_neighbors=k_range, weights=weight_options)\n",
        "    tuningRandomizedSearchCV(knn, param_dist)\n",
        "\n",
        "    # train a KNeighborsClassifier model on the training set\n",
        "    knn = KNeighborsClassifier(n_neighbors=27, weights='uniform')\n",
        "    knn.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = knn.predict(X_test)\n",
        "\n",
        "    print('########### KNeighborsClassifier ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(knn, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['KNN'] = accuracy_score * 100\n"
      ],
      "execution_count": 105,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def tuningRandomizedSearchCV(model, param_dist):\n",
        "    # Searching multiple parameters simultaneously\n",
        "    # n_iter controls the number of searches\n",
        "    rand = RandomizedSearchCV(model, param_dist, cv=10, scoring='accuracy', n_iter=10, random_state=5)\n",
        "    rand.fit(X, y)\n",
        "\n",
        "    # Examine the best model and its parameters\n",
        "    print('Rand. Best Score: ', rand.best_score_)\n",
        "    print('Rand. Best Params: ', rand.best_params_)\n",
        "\n",
        "    # Access the search results using cv_results_\n",
        "    results = rand.cv_results_\n",
        "\n",
        "    # Print the mean test scores and standard deviations for each parameter combination\n",
        "    for mean_score, std_score, params in zip(results['mean_test_score'], results['std_test_score'], results['params']):\n",
        "        print(f'Mean: {mean_score}, Std: {std_score}, Params: {params}')\n"
      ],
      "metadata": {
        "id": "jgtLkYwkoeTQ"
      },
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def evalClassModel(model, y_test, y_pred_class, plot=False):\n",
        "    # ... (previous code)\n",
        "\n",
        "    # store the predicted probabilities for class 1\n",
        "    y_pred_prob = model.predict_proba(X_test)[:, 1]\n",
        "\n",
        "    if plot == True:\n",
        "        # histogram of predicted probabilities\n",
        "        # adjust the font size\n",
        "        plt.rcParams['font.size'] = 12\n",
        "        # 8 bins\n",
        "        plt.hist(y_pred_prob, bins=8)\n",
        "\n",
        "        # x-axis limit from 0 to 1\n",
        "        plt.xlim(0, 1)\n",
        "        plt.title('Histogram of predicted probabilities')\n",
        "        plt.xlabel('Predicted probability of treatment')\n",
        "        plt.ylabel('Frequency')\n",
        "\n",
        "    # predict treatment if the predicted probability is greater than or equal to 0.3\n",
        "    y_pred_class = (y_pred_prob >= 0.3).astype(int)\n",
        "\n",
        "    # ... (rest of the code)\n"
      ],
      "metadata": {
        "id": "kRtaMPNKozX1"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "061c6d26-0e65-4f21-8995-f910526f5e8e",
        "_uuid": "ea3e9e3f9d300913aba08ef1027e70025b7b0102",
        "id": "--8q02rtaigR"
      },
      "cell_type": "markdown",
      "source": [
        "KNEIGHBORSCLASSIFIER"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "c37a2ccc-f433-44a9-87d5-04e57e14f256",
        "_uuid": "604f548f0674bd6e66941cc967dfc07ce4e0701e",
        "scrolled": false,
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 959
        },
        "id": "k9GtwoMwaigR",
        "outputId": "55b3df90-f132-4000-f654-7c79dc6abf4a"
      },
      "cell_type": "code",
      "source": [
        "Knn()"
      ],
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rand. Best Score:  0.8206136900078678\n",
            "Rand. Best Params:  {'weights': 'uniform', 'n_neighbors': 15}\n",
            "Mean: 0.8020521898767374, Std: 0.021923104245971436, Params: {'weights': 'distance', 'n_neighbors': 16}\n",
            "Mean: 0.8076907946498821, Std: 0.0334697897809666, Params: {'weights': 'uniform', 'n_neighbors': 22}\n",
            "Mean: 0.8141751901389981, Std: 0.027077888878890937, Params: {'weights': 'uniform', 'n_neighbors': 18}\n",
            "Mean: 0.8165683189089956, Std: 0.03176432014155995, Params: {'weights': 'uniform', 'n_neighbors': 27}\n",
            "Mean: 0.8173747705218988, Std: 0.03097557411740103, Params: {'weights': 'uniform', 'n_neighbors': 29}\n",
            "Mean: 0.7980068187778652, Std: 0.025501207554607833, Params: {'weights': 'distance', 'n_neighbors': 10}\n",
            "Mean: 0.7988132703907683, Std: 0.02511500842181001, Params: {'weights': 'distance', 'n_neighbors': 22}\n",
            "Mean: 0.8068974560713349, Std: 0.02553702083242207, Params: {'weights': 'uniform', 'n_neighbors': 14}\n",
            "Mean: 0.7996262785208497, Std: 0.022997201539112454, Params: {'weights': 'distance', 'n_neighbors': 12}\n",
            "Mean: 0.8206136900078678, Std: 0.02929144870851032, Params: {'weights': 'uniform', 'n_neighbors': 15}\n",
            "########### KNeighborsClassifier ###############\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-108-43e1744c190d>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mKnn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-105-8002c0812d1c>\u001b[0m in \u001b[0;36mKnn\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0;31m#Data for final graph\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m     \u001b[0mmethodDict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'KNN'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maccuracy_score\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for *: 'NoneType' and 'int'"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "2138699d-4714-4e44-8121-d710a784b0f6",
        "_uuid": "6ca0e7311ac50b774f34803b1cb34fda2a7c106f",
        "id": "uxayIuTaaigS"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Decision_Tree_classifier'></a>\n",
        "### Decision Tree classifier"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "fcb8d170-9cde-4660-81f4-a2c78a08a94d",
        "_uuid": "d3f64d71ce02ef0948f73771f94b345b1c738716",
        "collapsed": true,
        "trusted": true,
        "id": "4n2fogx8aigS"
      },
      "cell_type": "code",
      "source": [
        "def treeClassifier():\n",
        "    # Calculating the best parameters\n",
        "    tree = DecisionTreeClassifier()\n",
        "    featuresSize = feature_cols.__len__()\n",
        "    param_dist = {\"max_depth\": [3, None],\n",
        "              \"max_features\": randint(1, featuresSize),\n",
        "              \"min_samples_split\": randint(2, 9),\n",
        "              \"min_samples_leaf\": randint(1, 9),\n",
        "              \"criterion\": [\"gini\", \"entropy\"]}\n",
        "    tuningRandomizedSearchCV(tree, param_dist)\n",
        "\n",
        "    # train a decision tree model on the training set\n",
        "    tree = DecisionTreeClassifier(max_depth=3, min_samples_split=8, max_features=6, criterion='entropy', min_samples_leaf=7)\n",
        "    tree.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = tree.predict(X_test)\n",
        "\n",
        "    print('########### Tree classifier ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(tree, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['Tree clas.'] = accuracy_score * 100"
      ],
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def evalClassModel(model, y_test, y_pred_class, plot=False):\n",
        "    # ... (the rest of your function)\n",
        "\n",
        "    # predict treatment if the predicted probability is greater than or equal to 0.3\n",
        "    y_pred_prob = model.predict_proba(X_test)[:, 1]\n",
        "    y_pred_class = (y_pred_prob >= 0.3).astype(int)\n",
        "\n",
        "    # calculate accuracy score\n",
        "    accuracy_score = metrics.accuracy_score(y_test, y_pred_class)\n",
        "\n",
        "    # ... (the rest of your function)\n",
        "\n",
        "    return accuracy_score\n"
      ],
      "metadata": {
        "id": "BTApRehDplem"
      },
      "execution_count": 110,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "f0005b0c-9f54-441d-b71d-6dc1eaf79a48",
        "_uuid": "b6f92441922c51ed520f54e588d28e5f6ac54d7c",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F6NxmnKQaigS",
        "outputId": "c23b2ceb-e8a1-4b8b-f0ac-5cf70c44ebbc"
      },
      "cell_type": "code",
      "source": [
        "treeClassifier()"
      ],
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rand. Best Score:  0.8295043273013375\n",
            "Rand. Best Params:  {'criterion': 'entropy', 'max_depth': 3, 'max_features': 7, 'min_samples_leaf': 6, 'min_samples_split': 4}\n",
            "Mean: 0.8278783110411749, Std: 0.02874585005625005, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 6, 'min_samples_leaf': 7, 'min_samples_split': 8}\n",
            "Mean: 0.7762522947810122, Std: 0.0475878340195447, Params: {'criterion': 'gini', 'max_depth': None, 'max_features': 1, 'min_samples_leaf': 5, 'min_samples_split': 8}\n",
            "Mean: 0.8286978756884341, Std: 0.02517352635028325, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 7, 'min_samples_leaf': 1, 'min_samples_split': 6}\n",
            "Mean: 0.8020390768423813, Std: 0.029184575155107695, Params: {'criterion': 'entropy', 'max_depth': None, 'max_features': 6, 'min_samples_leaf': 8, 'min_samples_split': 2}\n",
            "Mean: 0.827891424075531, Std: 0.025737783348091767, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 6, 'min_samples_leaf': 4, 'min_samples_split': 3}\n",
            "Mean: 0.8092512457382638, Std: 0.052795143306563395, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 5, 'min_samples_leaf': 7, 'min_samples_split': 7}\n",
            "Mean: 0.7519669551534225, Std: 0.07133781147185192, Params: {'criterion': 'gini', 'max_depth': 3, 'max_features': 2, 'min_samples_leaf': 2, 'min_samples_split': 4}\n",
            "Mean: 0.7293666404405978, Std: 0.028836454776282293, Params: {'criterion': 'entropy', 'max_depth': None, 'max_features': 7, 'min_samples_leaf': 2, 'min_samples_split': 4}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 7, 'min_samples_leaf': 6, 'min_samples_split': 4}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'gini', 'max_depth': 3, 'max_features': 5, 'min_samples_leaf': 7, 'min_samples_split': 6}\n",
            "########### Tree classifier ###############\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "406048fd-2312-4975-bd64-3db6cfe85aa5",
        "_uuid": "5c0bc7e355c38fa87b250b6a56e002611c0ede1d",
        "id": "pWNqZs3HaigS"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Random_Forests'></a>\n",
        "### Random Forests"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b5d831e8-3bcc-4e78-82bd-309a9a898954",
        "_uuid": "5419fdc8736774794575f2bd85a0f5341ad9d48d",
        "collapsed": true,
        "trusted": true,
        "id": "8IZqEUx-aigS"
      },
      "cell_type": "code",
      "source": [
        "def randomForest():\n",
        "    # Calculating the best parameters\n",
        "    forest = RandomForestClassifier(n_estimators = 20)\n",
        "\n",
        "    featuresSize = feature_cols.__len__()\n",
        "    param_dist = {\"max_depth\": [3, None],\n",
        "              \"max_features\": randint(1, featuresSize),\n",
        "              \"min_samples_split\": randint(2, 9),\n",
        "              \"min_samples_leaf\": randint(1, 9),\n",
        "              \"criterion\": [\"gini\", \"entropy\"]}\n",
        "    tuningRandomizedSearchCV(forest, param_dist)\n",
        "\n",
        "    # Building and fitting my_forest\n",
        "    forest = RandomForestClassifier(max_depth = None, min_samples_leaf=8, min_samples_split=2, n_estimators = 20, random_state = 1)\n",
        "    my_forest = forest.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = my_forest.predict(X_test)\n",
        "\n",
        "    print('########### Random Forests ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(my_forest, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['R. Forest'] = accuracy_score * 100"
      ],
      "execution_count": 112,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "d2b956e0-e921-4433-8cf1-3c4db0e26c12",
        "_uuid": "1c522cc7c4e6ba720b10620eb49f48274b24d79d",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "om1CtcWtaigT",
        "outputId": "b4642bb2-3911-40e6-bfa3-99ba5e644e31"
      },
      "cell_type": "code",
      "source": [
        "randomForest()"
      ],
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rand. Best Score:  0.8295043273013375\n",
            "Rand. Best Params:  {'criterion': 'entropy', 'max_depth': 3, 'max_features': 6, 'min_samples_leaf': 7, 'min_samples_split': 8}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 6, 'min_samples_leaf': 7, 'min_samples_split': 8}\n",
            "Mean: 0.8214332546551273, Std: 0.02557391776690943, Params: {'criterion': 'gini', 'max_depth': None, 'max_features': 1, 'min_samples_leaf': 5, 'min_samples_split': 8}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 7, 'min_samples_leaf': 1, 'min_samples_split': 6}\n",
            "Mean: 0.8230723839496459, Std: 0.017784515077532276, Params: {'criterion': 'entropy', 'max_depth': None, 'max_features': 6, 'min_samples_leaf': 8, 'min_samples_split': 2}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 6, 'min_samples_leaf': 4, 'min_samples_split': 3}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 5, 'min_samples_leaf': 7, 'min_samples_split': 7}\n",
            "Mean: 0.827098085496984, Std: 0.02690859591209253, Params: {'criterion': 'gini', 'max_depth': 3, 'max_features': 2, 'min_samples_leaf': 2, 'min_samples_split': 4}\n",
            "Mean: 0.7923813270390768, Std: 0.028603225314929703, Params: {'criterion': 'entropy', 'max_depth': None, 'max_features': 7, 'min_samples_leaf': 2, 'min_samples_split': 4}\n",
            "Mean: 0.8295043273013375, Std: 0.02483316173616796, Params: {'criterion': 'entropy', 'max_depth': 3, 'max_features': 7, 'min_samples_leaf': 6, 'min_samples_split': 4}\n",
            "Mean: 0.8286978756884341, Std: 0.02517352635028325, Params: {'criterion': 'gini', 'max_depth': 3, 'max_features': 5, 'min_samples_leaf': 7, 'min_samples_split': 6}\n",
            "########### Random Forests ###############\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "1c07c4f6-5897-4bf5-9f3a-2706430d2e2f",
        "_uuid": "278639308461647ea1206a6d93efad39d699a8de",
        "id": "bZpuQ20FaigT"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Bagging'></a>\n",
        "### Bagging"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "1782b0bb-eb0a-4741-b4f4-b2c9900970b2",
        "_uuid": "50d47d51bb91989b421803dd5bb1b95022dd7c42",
        "collapsed": true,
        "trusted": true,
        "id": "pq0pq3byaigT"
      },
      "cell_type": "code",
      "source": [
        "def bagging():\n",
        "    # Building and fitting\n",
        "    bag = BaggingClassifier(DecisionTreeClassifier(), max_samples=1.0, max_features=1.0, bootstrap_features=False)\n",
        "    bag.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = bag.predict(X_test)\n",
        "\n",
        "    print('########### Bagging ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(bag, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['Bagging'] = accuracy_score * 100"
      ],
      "execution_count": 114,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "de06cee0-9024-4a22-80e3-f6cd9c8aee0a",
        "_uuid": "4fcc753e51ab46cf492ed7202d23bfcfac1c608a",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sbZWvYo4aigT",
        "outputId": "d6773ba3-a124-4a8d-a202-bca6fbc43fb3"
      },
      "cell_type": "code",
      "source": [
        "bagging()"
      ],
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "########### Bagging ###############\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "8611c537-e9c9-4412-b513-8b0cf441ed05",
        "_uuid": "f99aa0dab6830aa2857d6003eef19ca2fbd754aa",
        "id": "DEiP0pIAaigT"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Boosting'></a>\n",
        "### Boosting"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "b23c5f32-f61d-4391-a3b8-8a989bc8ce54",
        "_uuid": "6a7d03cd950cf99d5f6ea5d7bad0dceed2508a49",
        "collapsed": true,
        "trusted": true,
        "id": "Raa1cTibaigU"
      },
      "cell_type": "code",
      "source": [
        "def boosting():\n",
        "    # Building and fitting\n",
        "    clf = DecisionTreeClassifier(criterion='entropy', max_depth=1)\n",
        "    boost = AdaBoostClassifier(base_estimator=clf, n_estimators=500)\n",
        "    boost.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = boost.predict(X_test)\n",
        "\n",
        "    print('########### Boosting ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(boost, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['Boosting'] = accuracy_score * 100"
      ],
      "execution_count": 116,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "4415545b-a6ef-40cd-8583-ecb036b82db3",
        "_uuid": "7c2ee5da9f1d4708b6a73071c538760964188d97",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aDWn3Y9JaigU",
        "outputId": "3e8c502d-b57e-4991-f5e9-2ecf0e150896"
      },
      "cell_type": "code",
      "source": [
        "boosting()"
      ],
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "########### Boosting ###############\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "615c515b-b3f3-4178-a5da-6ce2582b8d23",
        "_uuid": "7b2789cfb8a1b1afc4426883f2664016db3aaf61",
        "id": "tq35kKpcaigU"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Stacking'></a>\n",
        "### Stacking"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "a763ed38-22a7-4b50-bee4-db11b9bf6575",
        "_uuid": "cf645152f925cd1d5c0c79f3b46e7006ff6bbc92",
        "collapsed": true,
        "trusted": true,
        "id": "niMEjEjEaigU"
      },
      "cell_type": "code",
      "source": [
        "def stacking():\n",
        "    # Building and fitting\n",
        "    clf1 = KNeighborsClassifier(n_neighbors=1)\n",
        "    clf2 = RandomForestClassifier(random_state=1)\n",
        "    clf3 = GaussianNB()\n",
        "    lr = LogisticRegression()\n",
        "    stack = StackingClassifier(classifiers=[clf1, clf2, clf3], meta_classifier=lr)\n",
        "    stack.fit(X_train, y_train)\n",
        "\n",
        "    # make class predictions for the testing set\n",
        "    y_pred_class = stack.predict(X_test)\n",
        "\n",
        "    print('########### Stacking ###############')\n",
        "\n",
        "    accuracy_score = evalClassModel(stack, y_test, y_pred_class, True)\n",
        "\n",
        "    #Data for final graph\n",
        "    methodDict['Stacking'] = accuracy_score * 100\n",
        "\n"
      ],
      "execution_count": 118,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "37b8048f-a189-48f4-b855-4099debae483",
        "_uuid": "49178159638a6c10b86342dccc110656a70c9670",
        "trusted": true,
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sfc5bRmEaigU",
        "outputId": "03759518-e8ee-4ca3-cce1-5f7ca696223e"
      },
      "cell_type": "code",
      "source": [
        "\n",
        "stacking()"
      ],
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "########### Stacking ###############\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_uuid": "87e8181f247c4dd00dd8b2caf65ebe5b76367719",
        "id": "QzE8WUJ0aigU"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Predicting_with_Neural_Network'></a>\n",
        "## **9. Predicting with Neural Network**\n"
      ]
    },
    {
      "metadata": {
        "_uuid": "ee05c058a7e73956696bead61f457ee04f39a004",
        "id": "5I3UaPiCaigU"
      },
      "cell_type": "markdown",
      "source": [
        "### Create input functions\n",
        "You must create input functions to supply data for training, evaluating, and prediction."
      ]
    },
    {
      "metadata": {
        "_uuid": "3c532804f31ae661e5cf820406e4eee58679dcc6",
        "collapsed": true,
        "trusted": true,
        "id": "w4uyAUUzaigU"
      },
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "import argparse\n",
        "\n",
        "\n",
        "batch_size = 100\n",
        "train_steps = 1000\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=0)\n",
        "\n",
        "def train_input_fn(features, labels, batch_size):\n",
        "    \"\"\"An input function for training\"\"\"\n",
        "    # Convert the inputs to a Dataset.\n",
        "    dataset = tf.data.Dataset.from_tensor_slices((dict(features), labels))\n",
        "\n",
        "    # Shuffle, repeat, and batch the examples.\n",
        "    return dataset.shuffle(1000).repeat().batch(batch_size)\n",
        "\n",
        "def eval_input_fn(features, labels, batch_size):\n",
        "    \"\"\"An input function for evaluation or prediction\"\"\"\n",
        "    features=dict(features)\n",
        "    if labels is None:\n",
        "        # No labels, use only features.\n",
        "        inputs = features\n",
        "    else:\n",
        "        inputs = (features, labels)\n",
        "\n",
        "    # Convert the inputs to a Dataset.\n",
        "    dataset = tf.data.Dataset.from_tensor_slices(inputs)\n",
        "\n",
        "    # Batch the examples\n",
        "    assert batch_size is not None, \"batch_size must not be None\"\n",
        "    dataset = dataset.batch(batch_size)\n",
        "\n",
        "    # Return the dataset.\n",
        "    return dataset\n",
        "\n"
      ],
      "execution_count": 120,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "7540da5ccf242c31fae61193422a50c4132fb7cd",
        "id": "yvoBbSeNaigV"
      },
      "cell_type": "markdown",
      "source": [
        "### Define the feature columns\n",
        "A feature column is an object describing how the model should use raw input data from the features dictionary. When you build an Estimator model, you pass it a list of feature columns that describes each of the features you want the model to use."
      ]
    },
    {
      "metadata": {
        "_uuid": "4b51ea10c5fc254910a46910db0fb76b27150b24",
        "collapsed": true,
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w7hBoVM5aigV",
        "outputId": "9130fe9c-139b-43fe-dafd-2a504fb61412"
      },
      "cell_type": "code",
      "source": [
        "# Define Tensorflow feature columns\n",
        "age = tf.feature_column.numeric_column(\"Age\")\n",
        "gender = tf.feature_column.numeric_column(\"Gender\")\n",
        "family_history = tf.feature_column.numeric_column(\"family_history\")\n",
        "benefits = tf.feature_column.numeric_column(\"benefits\")\n",
        "care_options = tf.feature_column.numeric_column(\"care_options\")\n",
        "anonymity = tf.feature_column.numeric_column(\"anonymity\")\n",
        "leave = tf.feature_column.numeric_column(\"leave\")\n",
        "work_interfere = tf.feature_column.numeric_column(\"work_interfere\")\n",
        "feature_columns = [age, gender, family_history, benefits, care_options, anonymity, leave, work_interfere]\n"
      ],
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:From <ipython-input-121-95530304e16c>:2: numeric_column (from tensorflow.python.feature_column.feature_column_v2) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Use Keras preprocessing layers instead, either directly or via the `tf.keras.utils.FeatureSpace` utility. Each of `tf.feature_column.*` has a functional equivalent in `tf.keras.layers` for feature preprocessing when training a Keras model.\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_uuid": "0ec5458a421476ca5b77b77d67e5d7dbd406090f",
        "id": "kxEUQQfhaigV"
      },
      "cell_type": "markdown",
      "source": [
        "### Instantiate an Estimator\n",
        "Our problem is a classic classification problem. We want to predict whether a patient has to be treated or not. We'll use tf.estimator.DNNClassifier for deep models that perform multi-class classification."
      ]
    },
    {
      "metadata": {
        "_uuid": "605d76f9ecf1e3a87332633a0b84c68b04024494",
        "collapsed": true,
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "_N0e21jMaigV",
        "outputId": "c45abf29-ffa5-4f4d-b597-e32df2618b2d"
      },
      "cell_type": "code",
      "source": [
        "# Build a DNN with 2 hidden layers and 10 nodes in each hidden layer.\n",
        "model = tf.estimator.DNNClassifier(feature_columns=feature_columns,\n",
        "                                    hidden_units=[10, 10],\n",
        "                                    optimizer=tf.train.ProximalAdagradOptimizer(\n",
        "                                      learning_rate=0.1,\n",
        "                                      l1_regularization_strength=0.001\n",
        "                                    ))"
      ],
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-122-ca29708a184d>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m model = tf.estimator.DNNClassifier(feature_columns=feature_columns,\n\u001b[1;32m      3\u001b[0m                                     \u001b[0mhidden_units\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m                                     optimizer=tf.train.ProximalAdagradOptimizer(\n\u001b[0m\u001b[1;32m      5\u001b[0m                                       \u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                                       \u001b[0ml1_regularization_strength\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.001\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'tensorflow._api.v2.train' has no attribute 'ProximalAdagradOptimizer'"
          ]
        }
      ]
    },
    {
      "metadata": {
        "_uuid": "294ab3369fd6ddee67b62b402ebe707001010466",
        "id": "SlfV57GtaigV"
      },
      "cell_type": "markdown",
      "source": [
        "### Train, Evaluate, and Predict\n",
        "Now that we have an Estimator object, we can call methods to do the following:\n",
        "\n",
        "* Train the model.\n",
        "* Evaluate the trained model.\n",
        "* Use the trained model to make predictions.\n"
      ]
    },
    {
      "metadata": {
        "_uuid": "4fcb1a081143098bce426cc496167f024c432350",
        "id": "X7RLHq1-aigV"
      },
      "cell_type": "markdown",
      "source": [
        "#### Train the model\n",
        "The steps argument tells the method to stop training after a number of training steps."
      ]
    },
    {
      "metadata": {
        "_uuid": "805f28d819c59eee02123b11eff66d812d392188",
        "trusted": true,
        "collapsed": true,
        "id": "DBSi4f1kaigV"
      },
      "cell_type": "code",
      "source": [
        "model.train(input_fn=lambda:train_input_fn(X_train, y_train, batch_size), steps=train_steps)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "a4e82a5b76e6d0a89d21187413ed1574788fbe5a",
        "id": "MZlo7bYpaigW"
      },
      "cell_type": "markdown",
      "source": [
        "### Evaluate the trained model\n",
        "Now that the model has been trained, we can get some statistics on its performance. The following code block evaluates the accuracy of the trained model on the test data."
      ]
    },
    {
      "metadata": {
        "_uuid": "2b99faa167137ef3e90c7ebb9cd093837e8d4ef5",
        "trusted": true,
        "collapsed": true,
        "id": "dPP6ZUVraigW"
      },
      "cell_type": "code",
      "source": [
        "# Evaluate the model.\n",
        "eval_result = model.evaluate(\n",
        "    input_fn=lambda:eval_input_fn(X_test, y_test, batch_size))\n",
        "\n",
        "print('\\nTest set accuracy: {accuracy:0.2f}\\n'.format(**eval_result))\n",
        "\n",
        "#Data for final graph\n",
        "accuracy = eval_result['accuracy'] * 100\n",
        "methodDict['NN DNNClasif.'] = accuracy"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "de375081922a83052d997ce836c31884ce44efd7",
        "id": "irgPFmJ8aigW"
      },
      "cell_type": "markdown",
      "source": [
        "### Making predictions (inferring) from the trained model\n",
        "We now have a trained model that produces good evaluation results. We can now use the trained model to predict whether a patient needs treatment or not."
      ]
    },
    {
      "metadata": {
        "_uuid": "a72f2f39e610a12fea7f542fa4cccec9ca17544a",
        "collapsed": true,
        "trusted": true,
        "id": "yq3m5ydEaigW"
      },
      "cell_type": "code",
      "source": [
        "predictions = list(model.predict(input_fn=lambda:eval_input_fn(X_train, y_train, batch_size=batch_size)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "e078018202e2a75c3cace605d815be5435798682",
        "scrolled": false,
        "trusted": true,
        "collapsed": true,
        "id": "l7jBQTIKaigW"
      },
      "cell_type": "code",
      "source": [
        "# Generate predictions from the model\n",
        "template = ('\\nIndex: \"{}\", Prediction is \"{}\" ({:.1f}%), expected \"{}\"')\n",
        "\n",
        "# Dictionary for predictions\n",
        "col1 = []\n",
        "col2 = []\n",
        "col3 = []\n",
        "\n",
        "\n",
        "for idx, input, p in zip(X_train.index, y_train, predictions):\n",
        "    v  = p[\"class_ids\"][0]\n",
        "    class_id = p['class_ids'][0]\n",
        "    probability = p['probabilities'][class_id] # Probability\n",
        "\n",
        "    # Adding to dataframe\n",
        "    col1.append(idx) # Index\n",
        "    col2.append(v) # Prediction\n",
        "    col3.append(input) # Expecter\n",
        "\n",
        "\n",
        "    #print(template.format(idx, v, 100 * probability, input))\n",
        "\n",
        "\n",
        "results = pd.DataFrame({'index':col1, 'prediction':col2, 'expected':col3})\n",
        "results.head()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "83d68dc1-1929-4069-8b9f-2b1b0768840d",
        "_uuid": "289d8b5896d20f5859307e07c509c92151b4e942",
        "id": "LzrT93ntaigW"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Success_method_plot'></a>\n",
        "## **10. Success method plot**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "ff9279ed-3a53-47ef-8d69-b9c013c73ba0",
        "_uuid": "67df920b185fcf2a8941369bb91c8975d0c8ce10",
        "collapsed": true,
        "trusted": true,
        "id": "9IAxo5DyaigW"
      },
      "cell_type": "code",
      "source": [
        "def plotSuccess():\n",
        "    s = pd.Series(methodDict)\n",
        "    s = s.sort_values(ascending=False)\n",
        "    plt.figure(figsize=(12,8))\n",
        "    #Colors\n",
        "    ax = s.plot(kind='bar')\n",
        "    for p in ax.patches:\n",
        "        ax.annotate(str(round(p.get_height(),2)), (p.get_x() * 1.005, p.get_height() * 1.005))\n",
        "    plt.ylim([70.0, 90.0])\n",
        "    plt.xlabel('Method')\n",
        "    plt.ylabel('Percentage')\n",
        "    plt.title('Success of methods')\n",
        "\n",
        "    plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "3672320b-e060-45e4-b481-029ad98feb58",
        "_uuid": "26d24346015d93adf6c4fa9d384f480b7b391584",
        "scrolled": false,
        "trusted": true,
        "collapsed": true,
        "id": "wGEtxtLqaigW"
      },
      "cell_type": "code",
      "source": [
        "plotSuccess()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "05e05c13-6e1f-4900-b147-844cf49cdb41",
        "_uuid": "97b824045c3668ad8eab81bdfe35d07ab0d18c76",
        "id": "SJuZsIWyaigW"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Creating_predictions_on_test_set'></a>\n",
        "## **11. Creating predictions on test set**"
      ]
    },
    {
      "metadata": {
        "_cell_guid": "cd416a0e-a234-45c1-a502-e46d7b381dcd",
        "_uuid": "ddf3291a57a8ed1ebd10c81779abc44ff9f5ce72",
        "collapsed": true,
        "trusted": true,
        "id": "U2Q-7sszaigW"
      },
      "cell_type": "code",
      "source": [
        "# Generate predictions with the best method\n",
        "clf = AdaBoostClassifier()\n",
        "clf.fit(X, y)\n",
        "dfTestPredictions = clf.predict(X_test)\n",
        "\n",
        "# Write predictions to csv file\n",
        "# We don't have any significative field so we save the index\n",
        "results = pd.DataFrame({'Index': X_test.index, 'Treatment': dfTestPredictions})\n",
        "# Save to file\n",
        "# This file will be visible after publishing in the output section\n",
        "results.to_csv('results.csv', index=False)\n",
        "results.head()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "35d306ec4cb719e14f1b2600dff7a3ffa89f1b47",
        "id": "MVna7ERaaigX"
      },
      "cell_type": "markdown",
      "source": [
        "<a id='Submision'></a>\n",
        "## ** 12. Submision**"
      ]
    },
    {
      "metadata": {
        "_uuid": "8fdd6b0a10dd1efb08cfac45026ad83d3fd770eb",
        "id": "ublEhV0-aigX"
      },
      "cell_type": "markdown",
      "source": [
        "### Prepare Submission File\n",
        "We make submissions in CSV files. Your submissions usually have two columns: an ID column and a prediction column. The ID field comes from the test data (keeping whatever name the ID field had in that data, which for our data is the index). The prediction column will use the name of the target field.\n",
        "\n",
        "We will create a DataFrame with this data, and then use the dataframe's to_csv method to write our submission file. Explicitly include the argument index=False to prevent pandas from adding another column in our csv file."
      ]
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "224fe370c6c43359faa76d067a3ef39ed3b13402",
        "collapsed": true,
        "id": "jfEj7D-oaigX"
      },
      "cell_type": "code",
      "source": [
        "# Write predictions to csv file\n",
        "# We don't have any significative field so we save the index\n",
        "results = pd.DataFrame({'Index': X_test.index, 'Treatment': dfTestPredictions})\n",
        "# Save to file\n",
        "# This file will be visible after publishing in the output section\n",
        "results.to_csv('submission.csv', index=False)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "14436d0791aad480e08b4d5dce1ca51c1a25bd3b",
        "id": "hns6dCVtaigX"
      },
      "cell_type": "markdown",
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 2
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython2",
      "version": "2.7.12"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
